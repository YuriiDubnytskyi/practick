{"version":3,"sources":["containers/SingInLogIn/SingInLogIn.tsx","containers/CallBack/CallBack.tsx","pages/Greeting.tsx","components/Header/Header.tsx","api/userApi.ts","services/auth.service.ts","store/actions/actions.ts","store/actions/actionTypes.ts","containers/About/About.tsx","components/UserItem/UserItem.tsx","containers/Users/Users.tsx","components/ChatItem/ChatItem.tsx","services/users.service.ts","services/socket.service.ts","containers/ChatList/ChatList.tsx","containers/Main/Main.tsx","containers/AuthPage/AuthPage.tsx","containers/Chat/Chat.tsx","pages/Home.tsx","auth0/Auth.js","App.tsx","serviceWorker.ts","store/utility.ts","store/reducers/user.ts","store/reducers/users.ts","store/reducers/messages.ts","store/reducers/room.ts","store/reducers/notifications.ts","index.tsx"],"names":["SingInLogIn","props","className","onClick","auth","login","CallBack","history","useHistory","useEffect","test","window","location","hash","Error","console","log","handleAuthentication","Object","entries","localStorage","key","removeItem","Greeting","path","exact","render","isAuthenticated","to","Header","id","logout","isUserExist","email","axios","get","then","res","userAuth","profile","a","email_vefified","email_verified","getUser","result","data","setUserData","type","updateUserData","deleteUser","getAllUsers","users","addMess","mess","addRoom","room","addInitMess","removeMess","initNotification","initData","addNotification","addData","connect","state","userInf","user","dispatch","bindActionCreators","useState","setUser","name","setName","setEmail","setId","nickname","setNickname","family_name","setFamilyName","update","setUpdate","isAuth","showObject","getProfile","status","post","createUser","undefined","push","obg","userId","idd","_id","value","onChange","e","target","userData","put","delete","deleteUserAcount","UserItem","startChat","inetialUsers","setInitial","filterUsers","setFilterUsers","arr","filter","el","placeholder","event","updatedList","item","toLowerCase","search","map","userAll","messages","notification","notifications","message","setMess","setUsers","setRoom","findUserName","length","findUser","getChatMessages","mes","connectToServer","socket","getItem","emit","setItem","roomChat","setData","endpoint","socketIOClient","dat","on","pathname","alert","id1","id2","AuthPage","arrmess","chatUser","setUserChat","sendMsg","messData","userEmail","replace","userE","rows","onKeyPress","Home","Auth","auth0","authorize","parseHash","err","authResult","accessToken","idToken","setSession","error","expiresAt","JSON","stringify","expiresIn","Date","getTime","scopes","scope","requestedScopes","userProfile","clientID","returnTo","getAccessToken","cb","client","userInfo","this","WebAuth","domain","redirectUri","responseType","parse","grantedScopes","split","every","includes","App","Boolean","hostname","match","updateObject","oldObject","updatedValues","initialState","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","getState","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.261373cb.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport './SingInLogIn.css'\r\ninterface ISingInLogInProps {\r\n    auth:any\r\n}\r\n\r\nconst SingInLogIn: React.FunctionComponent<ISingInLogInProps> = (props) => {\r\n    return (\r\n        //Start ------------\r\n        <>\r\n            <div className=\"wrapper\">\r\n                <div className=\"main-content\">\r\n                    <div className='main-content_container'>\r\n                        <h1 className='title'>Hello, Wanderer!</h1>\r\n                        <p className='sub-title'>Sign In or Sign Up and start journey with us.</p>       \r\n                        <button className='btn-login' onClick={props.auth.login}>Sign In</button><br/>\r\n                        <button className='btn-singin' onClick={props.auth.login}>Sign Up</button>\r\n                   </div>\r\n                </div>\r\n\r\n                <ul className=\"circles\">\r\n                    <li className='square'></li>\r\n                    <li className='square'></li>\r\n                    <li className='square'></li>\r\n                    <li className='square'></li>\r\n                    <li className='square'></li>\r\n                    <li className='square'></li>\r\n                    <li className='square'></li>\r\n                    <li className='square'></li>\r\n                    <li className='square'></li>\r\n                    <li className='square'></li>\r\n                    <li className='circle'></li>\r\n                    <li className='circle'></li>\r\n                    <li className='circle'></li>\r\n                    <li className='circle'></li>\r\n                    <li className='circle'></li>\r\n                    <li className='circle'></li>\r\n                    <li className='circle'></li>\r\n                    <li className='circle'></li>\r\n                    <li className='circle'></li>\r\n                    <li className='circle'></li>\r\n                </ul>\r\n            </div>\r\n        </>\r\n        \r\n        //End------------\r\n    )\r\n};\r\n\r\nexport default SingInLogIn;\r\n","import React,{FC , useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './CallBack.css'\r\ninterface ICallBackProps {\r\n    auth:any,\r\n    location:any\r\n}\r\n\r\nconst CallBack:FC<ICallBackProps> = (props) => {\r\n    let history = useHistory();\r\n    useEffect(()=>{\r\n        if (/access_token|id_token|error/.test(window.location.hash)) {\r\n            console.log(history)\r\n            props.auth.handleAuthentication(history)\r\n            for (let [key, value] of Object.entries(localStorage)) {\r\n              if(key !== \"access_token\" && key !== \"id_token\" && key !== \"expires_at\" && key !== \"scopes\"){\r\n                  localStorage.removeItem(key)\r\n              }\r\n          }\r\n          } else {\r\n            throw new Error(\"Invalid callback URL.\");\r\n          }\r\n    },[])\r\n    return (\r\n        //Start---------------\r\n        <div className=''>\r\n            Loading...\r\n        </div>\r\n        //End-----------------\r\n  )\r\n};\r\n\r\nexport default CallBack;\r\n","import  React ,{FC} from 'react';\r\nimport {Route,Switch, Redirect} from 'react-router-dom';\r\nimport SingInLogIn from \"../containers/SingInLogIn/SingInLogIn\"\r\nimport CallBack from \"../containers/CallBack/CallBack\"\r\n\r\ninterface IGreetingProps {\r\n    auth:any,\r\n    location:any\r\n}\r\n\r\nconst Greeting:FC<IGreetingProps> = (props:IGreetingProps) => {\r\n    const auth = props.auth\r\n    return( \r\n        <Switch>\r\n            <Route path=\"/\" exact render={props => auth.isAuthenticated() ? (\r\n                    <Redirect to=\"/about\"/>\r\n                ):(\r\n                    <SingInLogIn auth={auth}/>\r\n                )\r\n            }/>\r\n        \r\n            <Route path=\"/callback\" exact>\r\n                <CallBack auth={props.auth} {...props}/>\r\n            </Route>\r\n        </Switch>\r\n    )\r\n};\r\n\r\nexport default Greeting;\r\n","import * as React from 'react';\r\nimport {NavLink} from \"react-router-dom\"\r\nimport \"./Header.css\"\r\n\r\ninterface IHeaderProps {\r\n    auth:any\r\n}\r\n\r\nconst Header: React.FunctionComponent<IHeaderProps> = (props) => {\r\n    return (\r\n        <header className=\"container-h\" id=\"home\">\r\n            <section className=\"container__header\">\r\n                <div className=\"logo\"><p className=\"logo__text\">WebChat</p></div>\r\n                <nav className=\"navigation\">\r\n                    <ul className=\"navigation__list\">\r\n                        <li className=\"navigation__list-item\"><NavLink to='/main' className=\"navigation__list-link\">Main</NavLink></li>\r\n                        <li className=\"navigation__list-item\"><NavLink to='/about' className=\"navigation__list-link\">About</NavLink></li>\r\n                        <li className=\"navigation__list-item\"><a onClick={()=>props.auth.logout()} className=\"navigation__list-link\">LogOut</a></li>  \r\n                    </ul>\r\n                </nav>\r\n            </section>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\"\r\n\r\nexport const createUser = (user:any) => axios.post(\"/api/users/create\",user).then((res:any)=>res)\r\n\r\nexport const isUserExist = (email:any) => \r\n    axios.get(\"/api/users/search/\"+email,email).then( (res)=>{\r\n    console.log(\"resultFull\"+res)\r\n    return res\r\n})\r\n\r\nexport const updateUser = (userData:any) => axios.put(\"/api/users/updateUser\",userData).then((res)=>res.data)\r\n\r\nexport const deleteUserAcount = (id:any) => axios.delete(\"/api/users/deleteUser/\"+id,id).then((res)=>res.status)\r\n\r\nexport const getUsers = () => axios.get(\"/api/users/getAll\").then((res)=>res.data)\r\n\r\nexport const createOrSearchChat = (id1:any,id2:any) => axios.get(\"/api/rooms/getRoom/\"+id1+\"/\"+id2).then((res)=>res.data)\r\n\r\nexport const getChatUsers = (email:any) => axios.get(\"/api/rooms/getRoomsUsers/\"+email,email).then((res)=>res.data)\r\n\r\nexport const getChatMessages = (room:any) => axios.get(\"/api/rooms/getRoomsMessages/\"+room,room).then((res)=>res.data[0].messages)\r\n\r\nexport const updateMess = (messData:any) => axios.put(\"/api/rooms/updateMess\",messData).then((res)=>res.data)","import {isUserExist} from \"../api/userApi\"\r\n\r\n export const userAuth = async (profile:any) =>{\r\n        console.log(!profile.email_vefified)\r\n        if(profile.email_verified){\r\n            return true            \r\n        }else{\r\n            return false\r\n        }\r\n}\r\n\r\nexport const getUser = async (email:any) =>{ \r\n    const result = await isUserExist(email)\r\n    return await result.data\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const setUserData = (data:any) => {\r\n    return {\r\n        type: actionTypes.SET_USER_DATA,\r\n        data:data\r\n    };\r\n};\r\n\r\nexport const updateUserData = (data:any) => {\r\n    return {\r\n        type: actionTypes.UPDATE_USER_DATA,\r\n        data:data\r\n    };\r\n};\r\n\r\nexport const deleteUser = () => {\r\n    return {\r\n        type: actionTypes.DELETE_USER,\r\n    };\r\n};\r\n\r\nexport const getAllUsers = (users:any) => {\r\n    return {\r\n        type: actionTypes.GET_ALL,\r\n        users:users\r\n    };\r\n};\r\n\r\nexport const addMess = (mess:any) => {\r\n    return {\r\n        type: actionTypes.ADD_MESS,\r\n        mess:mess\r\n    };\r\n};\r\n\r\nexport const addRoom = (room:any) => {\r\n    return {\r\n        type: actionTypes.ADD_ROOM,\r\n        room:room\r\n    };\r\n};\r\n\r\nexport const addInitMess = (mess:any) => {\r\n    return {\r\n        type: actionTypes.ADD_INIT_MESS,\r\n        mess:mess\r\n    };\r\n};\r\n\r\nexport const removeMess = () => {\r\n    return {\r\n        type: actionTypes.REMOVE_MESS\r\n    }\r\n}\r\n\r\nexport const initNotification = (initData:any) => {\r\n    return {\r\n        type: actionTypes.INIT_NOTIFICATION,\r\n        initData:initData\r\n    }\r\n}\r\n\r\nexport const addNotification = (addData:any) => {\r\n    return {\r\n        type:actionTypes.ADD_NOTIFICATION,\r\n        addData:addData\r\n    }\r\n}","export const SET_USER_DATA = 'SET_USER_DATA';\r\nexport const UPDATE_USER_DATA = 'UPDATE_USER_DATA';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const GET_ALL = 'GET_ALL';\r\nexport const ADD_MESS = 'ADD_MESS';\r\nexport const ADD_ROOM = 'ADD_ROOM';\r\nexport const ADD_INIT_MESS = 'ADD_INIT_MESS'\r\nexport const REMOVE_MESS = 'REMOVE_MESS'\r\nexport const INIT_NOTIFICATION = 'INIT_NOTIFICATION'\r\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION'","import React,{useEffect,useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from '../../components/Header/Header'\r\nimport {createUser,updateUser,deleteUserAcount} from \"../../api/userApi\"\r\nimport {userAuth,getUser} from \"../../services/auth.service\"\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setUserData,updateUserData,deleteUser} from \"../../store/actions/actions\";\r\nimport \"./About.css\"\r\n\r\ninterface IAboutProps {\r\n    auth:any\r\n}\r\n\r\nconst About: React.FunctionComponent<IAboutProps> = (props:any) => {\r\n    const [user,setUser] = useState<any>('')\r\n    const [name,setName] = useState<any>('')\r\n    const [email,setEmail] = useState<any>('')\r\n    const [id,setId] = useState<any>('')\r\n    const [nickname,setNickname] = useState<any>('')\r\n    const [family_name,setFamilyName] = useState<any>('')\r\n    const [update,setUpdate] = useState<boolean>(false)\r\n\r\n    const history = useHistory()\r\n    useEffect(()=>{\r\n        if(!props.userInf.isAuth){\r\n            props.auth.getProfile((profile:any)=>{\r\n                setUser(profile)\r\n                const {email,nickname,name,family_name} = profile        \r\n                userAuth(profile).then((res:any)=> res ? \r\n                    getUser(email).then((res:any) => \r\n                        res.status!==404 ?\r\n                            showObject(res):\r\n                            createUser({email,nickname,name,family_name})).then(res=>{\r\n                                if(res === undefined){\r\n                                    console.log(\"error\")\r\n                                }else{\r\n                                    showObject(res.data)\r\n                                }\r\n                            })\r\n                \r\n                \r\n                : history.push('/verified'))\r\n    \r\n            })\r\n        }else{\r\n            showObject(props.userInf,true)\r\n        }\r\n    },[])\r\n\r\n    const showObject = (obg:any,idd:boolean = false)=>{\r\n        let userId\r\n        if(idd){\r\n            setId(obg.id)\r\n            userId=obg.id\r\n        }else{\r\n            setId(obg._id)\r\n            userId=obg._id\r\n        }\r\n    \r\n        setName(obg.name)\r\n        setEmail(obg.email)\r\n        setNickname(obg.nickname)\r\n        setFamilyName(obg.family_name)\r\n      \r\n        let user = {name:obg.name,email:obg.email,nickname:obg.nickname,family_name:obg.family_name,id:userId}\r\n        props.setUserData(user)\r\n    }\r\n    const saveUpdates = () => {\r\n        updateUser({id,name,nickname,family_name}).then((res:any)=>\r\n            res.name ? \r\n            props.updateUserData({name:res.name,family_name:res.family_name,nickname:res.nickname})\r\n            :console.log('error')\r\n        ).then(()=>setUpdate(false))\r\n    }    \r\n    const canselUpdates = () => {\r\n        setName(props.userInf.name)\r\n        setNickname(props.userInf.nickname)\r\n        setFamilyName(props.userInf.family_name)\r\n        setUpdate(false)\r\n    }\r\n    const deleteAcount = () =>{\r\n        deleteUserAcount(id)\r\n        .then((status)=>{\r\n            status===200?props.deleteUser():console.log(\"error\")\r\n        })\r\n        .then(()=>{\r\n            props.auth.logout()\r\n        })\r\n    }\r\n    return (\r\n\r\n        //Start ---------------\r\n\r\n        <div>\r\n            <Header auth={props.auth}/>\r\n            <div className='wrapper_about'> \r\n                <div className='about-container'>\r\n                    <div>\r\n                        <p className='title'>Your Account</p>\r\n                        <p className='user-value'>Name -- {name}</p>\r\n                        {update ? <input className='user-value_input' value={name} name=\"name\" onChange={(e:any)=> setName(e.target.value)}/>:<></>}\r\n                        <p className='user-value'>Surname -- {family_name}</p>\r\n                        {update ? <input className='user-value_input' value={family_name} name=\"family_name\" onChange={(e:any)=> setFamilyName(e.target.value)}/>:<></>}\r\n                        <p className='user-value'>Nickname -- {nickname} users can find you</p>\r\n                        {update ? <input className='user-value_input' value={nickname} name=\"nickname\" onChange={(e:any)=> setNickname(e.target.value)}/>:<></>}\r\n                        { update ? <><br/><button className='btn btn--save' onClick={saveUpdates}>Save</button>\r\n                                <button className='btn btn--cansel' onClick={canselUpdates}>Cancel</button></>\r\n                            : <button className='btn btn--update' onClick={()=> setUpdate(true)}>Update</button> }\r\n                    </div>\r\n                    <div className='delete-container'>\r\n                        <p className='sub-title'>Danger Zone</p>\r\n                        <button  className='btn btn--delete' onClick={deleteAcount}>DELETE ACOUNT</button> \r\n                    </div>\r\n                      \r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n        //End -----------\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ( state:{user:any} ) => {\r\n    return {\r\n        userInf:state.user\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n           setUserData,\r\n           updateUserData,\r\n           deleteUser\r\n        }, dispatch)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(About);\r\n","import React from 'react';\r\nimport \"./UserItem.css\"\r\n\r\ninterface IChatItemProps {\r\n    nickname:any,\r\n    email:any,\r\n    startChat:any\r\n}\r\n\r\nconst UserItem: React.FunctionComponent<IChatItemProps> = (props:any) => {\r\n    return (\r\n        //Style --------------\r\n        <div className='user-chat'>\r\n            <p className='user-nickname'>{props.nickname}</p>\r\n            <button className='btn--speak' onClick={()=>props.startChat(props.email)}>Chat+</button>\r\n        </div>\r\n        //End -------------\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default UserItem;","import React,{useState, useEffect} from 'react';\r\nimport {getUsers} from \"../../api/userApi\"\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {getAllUsers} from \"../../store/actions/actions\";\r\nimport UserItem from '../../components/UserItem/UserItem'\r\nimport \"./Users.css\"\r\n\r\ninterface IUsersProps {\r\n  startChat:any\r\n}\r\n\r\nconst Users: React.FunctionComponent<IUsersProps> = (props:any) => {\r\n    const [inetialUsers, setInitial] = useState<any>([])\r\n    const [filterUsers, setFilterUsers] = useState<any>([])\r\n    \r\n    useEffect(()=>{\r\n        getUsers()\r\n        .then((arr) => {\r\n            props.getAllUsers(arr)\r\n            setInitial(arr.filter((el:any)=> el.email !== props.userInf.email))\r\n        })\r\n    },[])\r\n    \r\n    const filterUsersInput = (event:any) =>{\r\n        const updatedList = inetialUsers.filter(function(item:any){\r\n          return item.nickname.toLowerCase().search(\r\n            event.target.value.toLowerCase()) !== -1;\r\n        });\r\n        if(event.target.value === ''){\r\n            setFilterUsers([])\r\n        }else{\r\n            setFilterUsers(updatedList)\r\n        }\r\n    }\r\n\r\n    return (\r\n        //Start -----------\r\n        <div className='users-container'>\r\n            <div className='search-users'>\r\n                <input className='' placeholder=\"Search user\" onChange={filterUsersInput}/>\r\n            </div>\r\n            <div className='line'></div>\r\n            {filterUsers.map((el:any)=>{return <UserItem nickname={el.nickname} startChat={props.startChat} email={el.email}/>})}\r\n        </div>\r\n        //End----------------\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ( state:{user:any} ) => {\r\n    return {\r\n        userInf:state.user\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            getAllUsers\r\n        }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Users);","import React,{useState, useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {addRoom,addInitMess} from \"../../store/actions/actions\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {getChatMessages} from '../../api/userApi'\r\nimport {findUser} from '../../services/users.service'\r\nimport './ChatItem.css'\r\n\r\n\r\ninterface IChatItemProps {\r\n    data:any\r\n}\r\n\r\nconst ChatItem: React.FunctionComponent<IChatItemProps> = (props:any) => {\r\n    const [message,setMess] = useState<any>([])\r\n    const [users,setUsers] = useState<any>('')\r\n    const [room,setRoom] = useState<any>('')\r\n    let history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        setRoom(props.data.room)\r\n        setMess(props.data.messages)\r\n        if(props.data.users[0] === props.userInf.email){\r\n            setUsers(props.data.users[1])\r\n        }else{\r\n            setUsers(props.data.users[0])\r\n        }\r\n    },[])\r\n\r\n    const chatGo = () => {\r\n        if(props.notification[0][room] !== 0){\r\n            getChatMessages(room).then((mes)=>{\r\n\r\n                props.addInitMess(mes)        \r\n            })\r\n        }else{\r\n            props.addInitMess(message)\r\n        }\r\n       \r\n        props.addRoom(room)\r\n        history.push('/chat/'+room)\r\n    }\r\n    return (\r\n        //Start Style ------------\r\n        <div className='chat-item-container'>\r\n            <div className='chat-info'>\r\n               <p className='chat-user'>\r\n                    {findUser(props.userAll,users)}\r\n                </p>\r\n                <p className='chat-nitification'>{props.notification.length === 0? <></>:<>{props.notification[0][room]}</>}\r\n                </p> \r\n            </div>\r\n            \r\n            <button className='btn--startchat' onClick={chatGo}>Go Chat</button>\r\n            \r\n            \r\n        </div>\r\n        //End -------------\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ( state:{user:any,users:any,messages:any,notifications:any} ) => {\r\n    return {\r\n        userInf:state.user,\r\n        userAll:state.users.users,\r\n        mess:state.messages.messages,\r\n        notification:state.notifications.notifications\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            addInitMess,\r\n            addRoom\r\n        }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ChatItem);\r\n","export const findUser = (userAll:any,users:any)  => {\r\n    const findUserName = userAll.filter((el:any)=> el.email === users )\r\n    console.log(findUserName[0]+\"9090909090909090909\")\r\n    return findUserName.length === 0 ?'': findUserName[0].name\r\n}\r\n        \r\n        ","\r\nexport const connectToServer = (socket:any,email:any,room:any) =>{\r\n    if(localStorage.getItem(`${email}${room}`) === null || localStorage.getItem(`${email}${room}`) === 'false'){\r\n        socket.emit('new-user', room)\r\n        console.log(\"11111111111111\")\r\n        localStorage.setItem(`${email}${room}`,'true')\r\n    }\r\n}","import React,{useState, useEffect} from 'react';\r\nimport {getChatUsers} from \"../../api/userApi\"\r\nimport ChatItem from '../../components/ChatItem/ChatItem'\r\nimport socketIOClient from 'socket.io-client'\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {addMess, removeMess,initNotification,addNotification} from \"../../store/actions/actions\";\r\nimport {connectToServer} from '../../services/socket.service'\r\nimport './ChatList.css'\r\n\r\ninterface IUsersProps {\r\n    email:any\r\n}\r\n\r\nconst ChatList: React.FunctionComponent<IUsersProps> = (props:any) => {\r\n    const [data,setData] = useState<any>([])\r\n    const [endpoint,setEndpoint] = useState(`https://practick.herokuapp.com/`)\r\n    //const [endpoint,setEndpoint] = useState(`localhost:5000`)\r\n    const socket = socketIOClient(endpoint);\r\n\r\n    useEffect(()=>{\r\n        getChatUsers(props.email).then(res=>{\r\n            setData(res)\r\n            const dat:any={}\r\n            res.map((el:any)=>{\r\n                connectToServer(socket,props.email,el.room)\r\n                dat[el.room]=0\r\n            })\r\n            props.initNotification(dat)\r\n            \r\n        })\r\n    },[])\r\n    \r\n\r\n    useEffect(()=>{\r\n        socket.on('chat-message', (data:any) => {\r\n            console.log(\"herelocation\"+window.location)\r\n            if(window.location.pathname === '/chat/'+data.room){\r\n                console.log(\"herererere\"+data.message)\r\n                if(data.email !== props.userInf.email){\r\n                    props.addMess({mess:data.message,name:data.name})\r\n                }\r\n            }else{\r\n                props.addNotification(data.room)\r\n                alert(\"You have SMS from\"+data.name)\r\n                \r\n            }\r\n        })\r\n    })\r\n\r\n    return (\r\n        //Start ----------------\r\n        <div className='chatlist-container'>\r\n            {data.map((el:any)=>{\r\n                return (\r\n                    <>\r\n                        <ChatItem data={el}/>\r\n                    </>\r\n                )\r\n            })}\r\n        </div>\r\n        //End-------------------\r\n    )\r\n};\r\n\r\n\r\nconst mapStateToProps = ( state:{user:any,users:any,messages:any,room:any,notifications:any} ) => {\r\n    return {\r\n        userInf:state.user,\r\n        userAll:state.users.users,\r\n        mess:state.messages.messages,\r\n        roomChat:state.room.room,\r\n        notification:state.notifications.notifications\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            addMess,removeMess,initNotification,addNotification\r\n        }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ChatList);","import React,{useState, useEffect} from 'react';\r\nimport Header from '../../components/Header/Header'\r\nimport {createOrSearchChat} from \"../../api/userApi\"\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {getAllUsers,addRoom} from \"../../store/actions/actions\";\r\nimport Users from '../Users/Users'\r\nimport ChatList from '../ChatList/ChatList'\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Main.css'\r\n\r\ninterface IMainProps {\r\n  auth:any\r\n}\r\n\r\nconst Main: React.FunctionComponent<IMainProps> = (props:any) => {\r\n    let history = useHistory();\r\n    useEffect(()=>{\r\n        if(props.userInf.name===''){\r\n            for (let [key, value] of Object.entries(localStorage)) {\r\n                if(key !== \"access_token\" && key !== \"id_token\" && key !== \"expires_at\" && key !== \"scopes\"){\r\n                    localStorage.setItem(key,'false')\r\n                }\r\n            }\r\n            history.push('/about')\r\n        }\r\n    },[])\r\n    const startChat = (nickname:any) =>{\r\n        const data ={\r\n            id1:nickname,\r\n            id2:props.userInf.email\r\n        }\r\n        createOrSearchChat(data.id1,data.id2).then((res)=>{\r\n            props.addRoom(res.room)\r\n            return res\r\n        }).then((res)=>{\r\n            history.push('/chat/'+res.room)\r\n        })\r\n    }\r\n    \r\n    return (\r\n        //Start --------------\r\n        <div className=''>\r\n            <Header auth={props.auth}/>\r\n            <div className='wrapper1'>\r\n                <div className='main-container'>    \r\n                    <Users startChat={startChat}/>\r\n                    <ChatList email={props.userInf.email}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        //End ---------------\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ( state:{user:any} ) => {\r\n    return {\r\n        userInf:state.user\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            getAllUsers,\r\n            addRoom\r\n        }, dispatch)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Main);\r\n// export default Main","import * as React from 'react';\r\nimport './AuthPage.css'\r\ninterface IAuthPageProps {\r\n    auth:any\r\n}\r\n\r\nconst AuthPage: React.FunctionComponent<IAuthPageProps> = (props) => {\r\n  return (\r\n      //Start-----------------\r\n    //   <div className=''>\r\n    //       <p className=''>Please verifide your account and log</p> \r\n    //       <button className='' onClick={()=>props.auth.login() }>Login</button>\r\n    //   </div>\r\n      <div className=\"wrapper\">\r\n      <div className=\"main-content\">\r\n          <div className='main-content_container'>\r\n              <h1 className='title'>Hello, Wanderer!</h1>\r\n              <p className='sub-title'>Please verifide your account and log and start journey with us.</p>       \r\n              <button className='btn-login' onClick={()=>props.auth.login()}>Log In</button>\r\n              <div>\r\n                  <div className=\"infinite-rotate1\"></div> \r\n                  <div className=\"infinite-rotate2\"></div> \r\n                  <div className=\"infinite-rotate3\"></div>\r\n              </div>\r\n         </div>\r\n      </div>\r\n\r\n      <ul className=\"circles\">\r\n          <li className='square'></li>\r\n          <li className='square'></li>\r\n          <li className='square'></li>\r\n          <li className='square'></li>\r\n          <li className='square'></li>\r\n          <li className='square'></li>\r\n          <li className='square'></li>\r\n          <li className='square'></li>\r\n          <li className='square'></li>\r\n          <li className='square'></li>\r\n          <li className='circle'></li>\r\n          <li className='circle'></li>\r\n          <li className='circle'></li>\r\n          <li className='circle'></li>\r\n          <li className='circle'></li>\r\n          <li className='circle'></li>\r\n          <li className='circle'></li>\r\n          <li className='circle'></li>\r\n          <li className='circle'></li>\r\n          <li className='circle'></li>\r\n      </ul>\r\n  </div>\r\n\r\n      //End-------------------\r\n  )\r\n};\r\n\r\nexport default AuthPage;\r\n","import React,{useState, useEffect} from 'react';\r\nimport socketIOClient from 'socket.io-client'\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {addMess, removeMess,addNotification} from \"../../store/actions/actions\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {updateMess} from \"../../api/userApi\"\r\nimport {connectToServer} from '../../services/socket.service'\r\nimport './Chat.css'\r\nimport { userInfo } from 'os';\r\n\r\n//const socket = io.connect('http://localhost:5000')\r\ninterface IMainProps {\r\n    auth:any\r\n}\r\n\r\nconst Chat: React.FunctionComponent<IMainProps> = (props:any) => {\r\n    const [endpoint,setEndpoint] = useState(`https://practick.herokuapp.com/`)\r\n    //const [endpoint,setEndpoint] = useState(`localhost:5000`)\r\n    const [mess,setMess] = useState('')\r\n    const [arrmess,setArrmess] = useState<any>([])\r\n    const [chatUser,setUserChat] = useState('')\r\n    let history = useHistory();\r\n    const socket = socketIOClient(endpoint);\r\n\r\n    const sendMsg =()=>{\r\n        console.log(\"room\"+props.roomChat)\r\n        const socket = socketIOClient(endpoint);\r\n        props.addMess({mess,name:props.userInf.name})\r\n        socket.emit('send-chat-message', props.roomChat, mess, props.userInf.email, props.userInf.name)\r\n        let data = props.mess\r\n        data.push({mess,name:props.userInf.name})\r\n        updateMess({room:props.roomChat,mess:data})\r\n        setMess('')\r\n    }\r\n   \r\n    useEffect(()=>{\r\n        if(props.userInf.name===''){\r\n            for (let [key, value] of Object.entries(localStorage)) {\r\n                if(key !== \"access_token\" && key !== \"id_token\" && key !== \"expires_at\" && key !== \"scopes\"){\r\n                    localStorage.setItem(key,'false')\r\n                }\r\n            }\r\n            history.push('/about')\r\n        }else{\r\n            connectToServer(socket,props.userInf.email,props.roomChat)\r\n            const userEmail =props.roomChat.replace(props.userInf.email,'')\r\n            const userE = props.userAll.filter((el:any)=>el.email===userEmail) \r\n            setUserChat(userE[0].name)\r\n        }\r\n        \r\n    },[])\r\n    useEffect(()=>{\r\n        \r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n        socket.on('chat-message', (data:any) => {\r\n            console.log(\"heredata\"+arrmess)\r\n            console.log(\"herererere888888888888888888888888\"+history)\r\n            if(window.location.pathname === '/chat/'+data.room){\r\n                if(data.email !== props.userInf.email){\r\n                    props.addMess({mess:data.message,name:data.name})\r\n                }\r\n            }else{\r\n                props.addNotification(data.room)\r\n                alert(\"You have SMS from\"+data.name)\r\n               \r\n            }\r\n        })\r\n    })\r\n        \r\n    const leaveRoom = () => {\r\n        props.removeMess()\r\n        history.push('/main')\r\n    }\r\n    \r\n    const keyPressed = (e:any) => {\r\n        if(e.key === \"Enter\"){\r\n            sendMsg()\r\n        }\r\n    }\r\n\r\n    return (\r\n        //Start-----------\r\n        <div className=''>\r\n            <header className='header-chat'>\r\n                <div className=\"logo1\"><p className=\"logo__text1\">WebChat</p></div>\r\n                <p className='header-p'>\r\n                    <button className='header-btn' onClick={leaveRoom}>EXIT CHAT</button>\r\n                </p>\r\n                <div className=\"logo2\"><p className=\"logo__text2\">WebChat</p></div>\r\n            </header>  \r\n            \r\n            <div className='wrapper2'>\r\n                <p className='title-room'>{chatUser}---{props.userInf.name}</p>\r\n                <div className='chat-mess'>\r\n                    {props.mess.map((el:any)=>{ \r\n                        if(el.name === props.userInf.name){\r\n                            return <p className='right-mess'>{el.mess}</p> \r\n                        }else{\r\n                            return <p className='left-mess'>{el.mess}</p> \r\n                        }   \r\n                    })}\r\n                </div>\r\n                <div className='send-mess'>\r\n                    <textarea rows={3} className='send-mess_input' value={mess} onChange={(e:any)=>setMess(e.target.value)} onKeyPress={keyPressed}></textarea>\r\n                    <button className='send-mess_btn' onClick={sendMsg}>Send</button>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n        //End-------------------\r\n    )\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = ( state:{user:any,users:any,messages:any,room:any} ) => {\r\n    return {\r\n        userInf:state.user,\r\n        userAll:state.users.users,\r\n        mess:state.messages.messages,\r\n        roomChat:state.room.room\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            addMess,removeMess,addNotification\r\n        }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Chat);","import  React ,{FC} from 'react';\r\nimport {Route,Switch,Redirect} from 'react-router-dom';\r\nimport About from \"../containers/About/About\";\r\nimport Main from \"../containers/Main/Main\";\r\nimport AuthPage from '../containers/AuthPage/AuthPage';\r\nimport Chat from '../containers/Chat/Chat'\r\n\r\ninterface IHomeProps {\r\n    auth:any\r\n}\r\n\r\nconst Home:FC<IHomeProps> = (props:IHomeProps) => {\r\n    const auth = props.auth\r\n    return (\r\n        <>\r\n        <Switch>\r\n            <Route path='/about' exact render={props => auth.isAuthenticated() ? (\r\n                    <About auth={auth}/>\r\n                ):(\r\n                    <Redirect to=\"/\" />\r\n                )\r\n            }/>\r\n            <Route path='/main' exact render={props => auth.isAuthenticated() ? (\r\n                    <Main auth={auth}/>\r\n                ):(\r\n                    <Redirect to=\"/\" />\r\n                )\r\n            }/>\r\n            <Route path='/verified' exact render={props => auth.isAuthenticated() ? (\r\n                    <AuthPage auth={auth}/>\r\n                ):(\r\n                    <Redirect to=\"/\" />\r\n                )\r\n            }/>\r\n            <Route path='/chat/:id' exact render={props => auth.isAuthenticated() ? (\r\n                    <Chat auth={auth}/>\r\n                ):(\r\n                    <Redirect to=\"/\" />\r\n                )\r\n            }/>\r\n            \r\n        </Switch>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","import auth0 from \"auth0-js\";\r\n\r\nexport default class Auth {\r\n  constructor(history) {\r\n    this.history = history;\r\n    this.userProfile = null;\r\n    this.requestedScopes = \"openid profile email read:courses\";\r\n    this.auth0 = new auth0.WebAuth({\r\n      domain: \"yurii-dubnytskyi.eu.auth0.com\",\r\n      clientID: \"LMh9Ao2isV5ay0EJAFQIGW9oqEAQNBy9\",\r\n      //clientID:'iHE49mBeK4r5dzxgWwZaf3LsiQ6lUfzF',\r\n      redirectUri: `https://practick.herokuapp.com/callback`,\r\n      //redirectUri:`http://localhost:3000/callback`,\r\n      responseType: \"token id_token\",\r\n      scope: this.requestedScopes\r\n    });\r\n    console.log(this)\r\n  }\r\n\r\n  login = () => {\r\n    this.auth0.authorize();\r\n  };\r\n\r\n  handleAuthentication = (history) => {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if (authResult && authResult.accessToken && authResult.idToken) {\r\n        this.setSession(authResult);\r\n        console.log(this)\r\n        history.push(\"/about\");\r\n      } else if (err) {\r\n        console.log(this)\r\n        history.push(\"/\");\r\n        alert(`Error: ${err.error}. Check the console for further details.`);\r\n        console.log(err);\r\n      }\r\n    });\r\n  };\r\n\r\n  setSession = authResult => {\r\n    console.log(authResult);\r\n    // set the time that the access token will expire\r\n    const expiresAt = JSON.stringify(\r\n      authResult.expiresIn * 1000 + new Date().getTime()\r\n    );\r\n\r\n    // If there is a value on the `scope` param from the authResult,\r\n    // use it to set scopes in the session for the user. Otherwise\r\n    // use the scopes as requested. If no scopes were requested,\r\n    // set it to nothing\r\n    const scopes = authResult.scope || this.requestedScopes || \"\";\r\n\r\n    localStorage.setItem(\"access_token\", authResult.accessToken);\r\n    localStorage.setItem(\"id_token\", authResult.idToken);\r\n    localStorage.setItem(\"expires_at\", expiresAt);\r\n    localStorage.setItem(\"scopes\", JSON.stringify(scopes));\r\n  };\r\n\r\n  isAuthenticated() {\r\n    const expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\r\n    return new Date().getTime() < expiresAt;\r\n  }\r\n\r\n  logout = () => {\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"id_token\");\r\n    localStorage.removeItem(\"expires_at\");\r\n    localStorage.removeItem(\"scopes\");\r\n    this.userProfile = null;\r\n    this.auth0.logout({\r\n      clientID: \"LMh9Ao2isV5ay0EJAFQIGW9oqEAQNBy9\",\r\n      //clientID:'iHE49mBeK4r5dzxgWwZaf3LsiQ6lUfzF',\r\n      returnTo: `https://practick.herokuapp.com`\r\n      //returnTo: `http://localhost:3000`\r\n    });\r\n  };\r\n\r\n  getAccessToken = () => {\r\n    const accessToken = localStorage.getItem(\"access_token\");\r\n    if (!accessToken) {\r\n      throw new Error(\"No access token found.\");\r\n    }\r\n    return accessToken;\r\n  };\r\n\r\n  getProfile = cb => {\r\n    if (this.userProfile) return cb(this.userProfile);\r\n    this.auth0.client.userInfo(this.getAccessToken(), (err, profile) => {\r\n      if (profile) this.userProfile = profile;\r\n      cb(profile, err);\r\n    });\r\n  };\r\n\r\n  userHasScopes(scopes) {\r\n    const grantedScopes = (\r\n      JSON.parse(localStorage.getItem(\"scopes\")) || \"\"\r\n    ).split(\" \");\r\n    return scopes.every(scope => grantedScopes.includes(scope));\r\n  }\r\n}\r\n","import React ,{FC}from 'react';\nimport { BrowserRouter,useHistory } from 'react-router-dom';\nimport Greeting from \"./pages/Greeting\"\nimport Home from \"./pages/Home\"\nimport Auth from \"./auth0/Auth\"\n\nconst App:FC<any> = (props:any) => {\n    let history = useHistory();\n    console.log(props.history)\n    const auth = new Auth(window.history)\n     return (\n        <div>\n            <BrowserRouter>\n                <Greeting auth={auth} {...props}/>\n                <Home auth={auth}/>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject:any, updatedValues:any) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedValues\r\n    }\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState:any = {\r\n    id:0,\r\n    name:'',\r\n    email:'',\r\n    nickname:'',\r\n    family_name:'',\r\n    isAuth:false\r\n};\r\n\r\nconst user = (state:any = initialState,action:any)=>{\r\n    switch (action.type){\r\n        case actionTypes.SET_USER_DATA:\r\n            return updateObject(state,{\r\n                id:action.data.id,\r\n                name:action.data.name,\r\n                email:action.data.email,\r\n                nickname:action.data.nickname,\r\n                family_name:action.data.family_name,\r\n                isAuth:true\r\n            })\r\n        case actionTypes.UPDATE_USER_DATA:\r\n            return updateObject(state,{\r\n                name:action.data.name,\r\n                nickname:action.data.nickname,\r\n                family_name:action.data.family_name,\r\n            })\r\n        case actionTypes.DELETE_USER:\r\n            return updateObject(state,{\r\n                id:0,\r\n                name:'',\r\n                email:'',\r\n                nickname:'',\r\n                family_name:'',\r\n                isAuth:false\r\n        })\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default user","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState:any = {\r\n    users:[]\r\n};\r\n\r\nconst users = (state:any = initialState,action:any)=>{\r\n    switch (action.type){\r\n        case actionTypes.GET_ALL:\r\n            return updateObject(state,{\r\n                users:[...action.users]\r\n            })\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default users","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState:any = {\r\n    messages:[]\r\n};\r\n\r\nconst message = (state:any = initialState,action:any)=>{\r\n    switch (action.type){\r\n        case actionTypes.ADD_MESS:\r\n            return updateObject(state,{\r\n                messages:[...state.messages,action.mess]\r\n            })\r\n        case actionTypes.ADD_INIT_MESS:\r\n            return updateObject(state,{\r\n                messages:action.mess\r\n            })\r\n        case actionTypes.REMOVE_MESS:\r\n            return updateObject(state,{\r\n                messages:[]\r\n            })\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default message","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState:any = {\r\n    room:''\r\n};\r\n\r\nconst room = (state:any = initialState,action:any)=>{\r\n    switch (action.type){\r\n        case actionTypes.ADD_ROOM:\r\n            return updateObject(state,{\r\n                room:action.room\r\n            })\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default room","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState:any = {\r\n    notifications:[]\r\n};\r\n\r\nconst addNotification = (state:any,addData:any) => {\r\n    state[0][addData] = state[0][addData] + 1\r\n    return state \r\n}\r\n\r\nconst message = (state:any = initialState,action:any)=>{\r\n    switch (action.type){\r\n        case actionTypes.INIT_NOTIFICATION:\r\n            return updateObject(state,{\r\n                notifications:[action.initData]\r\n            })\r\n        case actionTypes.ADD_NOTIFICATION:\r\n            return updateObject(state,{\r\n                notifications:[...state.notifications,addNotification(state.notifications,action.addData)]\r\n            })\r\n        \r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default message","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport user from \"./store/reducers/user\"\r\nimport users from \"./store/reducers/users\"\r\nimport messages from \"./store/reducers/messages\"\r\nimport room from \"./store/reducers/room\"\r\nimport notifications from './store/reducers/notifications'\r\n\r\nconst rootReducer = combineReducers({\r\n  user:user,\r\n  users:users,\r\n  messages:messages,\r\n  room:room,\r\n  notifications:notifications\r\n});\r\n\r\nconst logger = (store:any) => {\r\n  return (next:any) => {\r\n      return (action:any) => {\r\n          console.log('[Middleware] Dispatching', action);\r\n          const result = next(action);\r\n          console.log('[Middleware] next state', store.getState());\r\n          return result;\r\n      }\r\n  }\r\n};\r\n\r\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}