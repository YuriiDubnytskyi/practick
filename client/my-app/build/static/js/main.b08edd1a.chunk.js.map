{"version":3,"sources":["containers/SingInLogIn.tsx","containers/CallBack.tsx","pages/Greeting.tsx","components/Header.tsx","api/userApi.ts","services/auth.service.ts","store/actions/actions.ts","store/actions/actionTypes.ts","containers/About.tsx","containers/Users.tsx","components/ChatItem.tsx","containers/ChatList.tsx","containers/Main.tsx","pages/AuthPage.tsx","containers/Chat.tsx","pages/Home.tsx","auth0/Auth.js","App.tsx","serviceWorker.ts","store/utility.ts","store/reducers/user.ts","store/reducers/users.ts","store/reducers/messages.ts","store/reducers/room.ts","index.tsx"],"names":["SingInLogIn","props","onClick","auth","login","CallBack","history","useHistory","useEffect","test","window","location","hash","Error","console","log","handleAuthentication","Greeting","path","exact","render","isAuthenticated","to","Header","className","logout","isUserExist","email","axios","get","then","res","userAuth","profile","a","email_vefified","email_verified","getUser","result","data","setUserData","type","updateUserData","deleteUser","getAllUsers","users","addMess","mess","addRoom","room","addInitMess","removeMess","connect","state","userInf","user","dispatch","bindActionCreators","useState","setUser","name","setName","setEmail","id","setId","nickname","setNickname","family_name","setFamilyName","update","setUpdate","isAuth","showObject","getProfile","status","post","createUser","undefined","push","obg","userId","idd","_id","value","onChange","e","target","userData","put","delete","deleteUserAcount","userAll","inetialUsers","setInitial","filterUsers","setFilterUsers","arr","filter","el","placeholder","event","updatedList","item","toLowerCase","search","map","startChat","messages","message","setMess","setRoom","process","PORT","endpoint","socket","socketIOClient","on","ChatList","setData","localStorage","getItem","setItem","id1","id2","AuthPage","roomChat","arrmess","emit","messData","Home","Auth","auth0","authorize","parseHash","err","authResult","accessToken","idToken","setSession","alert","error","expiresAt","JSON","stringify","expiresIn","Date","getTime","scopes","scope","requestedScopes","removeItem","userProfile","clientID","returnTo","getAccessToken","cb","client","userInfo","this","WebAuth","domain","redirectUri","responseType","parse","grantedScopes","split","every","includes","App","Boolean","hostname","match","updateObject","oldObject","updatedValues","initialState","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","getState","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"+LAgBeA,EAViD,SAACC,GAC7D,OACI,qDAEI,0BAAQC,QAASD,EAAME,KAAKC,OAA5B,UACA,0BAAQF,QAASD,EAAME,KAAKC,OAA5B,aCcGC,EAlBqB,SAACJ,GACjC,IAAIK,EAAUC,cAUd,OATAC,qBAAU,WACN,IAAI,8BAA8BC,KAAKC,OAAOC,SAASC,MAKnD,MAAM,IAAIC,MAAM,yBAJhBC,QAAQC,IAAIT,GACZL,EAAME,KAAKa,qBAAqBV,KAKtC,IAEE,4CCUOW,EAlBqB,SAAChB,GACjC,IAAME,EAAOF,EAAME,KACnB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOe,KAAK,IAAIC,OAAK,EAACC,OAAQ,SAAAnB,GAAK,OAAIE,EAAKkB,kBACpC,kBAAC,IAAD,CAAUC,GAAG,WAEb,kBAAC,EAAD,CAAanB,KAAMA,OAI3B,kBAAC,IAAD,CAAOe,KAAK,YAAYC,OAAK,GACzB,kBAAC,EAAD,eAAUhB,KAAMF,EAAME,MAAUF,O,cCMjCsB,EAtBuC,SAACtB,GACnD,OACI,2BACA,uBAAKuB,UAAU,iDAEP,sBAAIA,UAAU,cACV,sBAAIA,UAAU,YACV,gBAAC,IAAD,CAASA,UAAU,WAAWF,GAAG,SAAjC,SAEJ,sBAAIE,UAAU,YACV,gBAAC,IAAD,CAASA,UAAU,WAAWF,GAAG,UAAjC,UAEJ,0BAAQE,UAAU,WAAWtB,QAAS,kBAAID,EAAME,KAAKsB,WAArD,c,iBCfPC,EAAc,SAACC,GAAD,OACvBC,IAAMC,IAAI,qBAAqBF,EAAMA,GAAOG,MAAM,SAACC,GAEnD,OADAjB,QAAQC,IAAI,aAAagB,GAClBA,M,yBCLGC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACjBpB,QAAQC,KAAKkB,EAAQE,iBAClBF,EAAQG,eAFM,0CAGN,GAHM,iCAKN,GALM,2CAAH,sDASTC,EAAO,uCAAG,WAAOV,GAAP,eAAAO,EAAA,sEACER,EAAYC,GADd,cACbW,EADa,gBAENA,EAAOC,KAFD,mFAAH,sD,eCTPC,EAAc,SAACD,GACxB,MAAO,CACHE,KCJqB,gBDKrBF,KAAKA,IAIAG,EAAiB,SAACH,GAC3B,MAAO,CACHE,KCVwB,mBDWxBF,KAAKA,IAIAI,EAAa,WACtB,MAAO,CACHF,KChBmB,gBDoBdG,EAAc,SAACC,GACxB,MAAO,CACHJ,KCrBe,UDsBfI,MAAMA,IAIDC,EAAU,SAACC,GACpB,MAAO,CACHN,KC3BgB,WD4BhBM,KAAKA,IAIAC,EAAU,SAACC,GACpB,MAAO,CACHR,KCjCgB,WDkChBQ,KAAKA,IAIAC,EAAc,SAACH,GACxB,MAAO,CACHN,KCvCqB,gBDwCrBM,KAAKA,IAIAI,EAAa,WACtB,MAAO,CACHV,KC7CmB,gBCyHZW,eAjBS,SAAEC,GACtB,MAAO,CACHC,QAAQD,EAAME,SAGK,SAACC,GACxB,OAAO,aACHA,YACGC,YAAmB,CACnBjB,cACAE,iBACAC,cACAa,MAKIJ,EAnHqC,SAACnD,GAAe,IAAD,EACxCyD,mBAAc,IAD0B,mBACnDC,GADmD,aAExCD,mBAAc,IAF0B,mBAExDE,EAFwD,KAEnDC,EAFmD,OAGtCH,mBAAc,IAHwB,mBAGxD/B,EAHwD,KAGlDmC,EAHkD,OAI5CJ,mBAAc,IAJ8B,mBAIxDK,EAJwD,KAIrDC,EAJqD,OAKhCN,mBAAc,IALkB,mBAKxDO,EALwD,KAK/CC,EAL+C,OAM3BR,mBAAc,IANa,mBAMxDS,EANwD,KAM5CC,EAN4C,OAOpCV,oBAAkB,GAPkB,mBAOxDW,EAPwD,KAOjDC,EAPiD,KASzDhE,EAAUC,cAChBC,qBAAU,WACFP,EAAMqD,QAAQiB,OAuBdC,EAAWvE,EAAMqD,SAAQ,GAtBzBrD,EAAME,KAAKsE,YAAW,SAACxC,GACnB0B,EAAQ1B,GADyB,IAE1BN,EAAmCM,EAAnCN,MAAMsC,EAA6BhC,EAA7BgC,SAASL,EAAoB3B,EAApB2B,KAAKO,EAAelC,EAAfkC,YAC3BnC,EAASC,GAASH,MAAK,SAACC,GAAD,OAAYA,EAC/BM,EAAQV,GAAOG,MAAK,SAACC,GAAD,OACH,MAAbA,EAAI2C,OACAF,EAAWzC,GJ7Bb,SAACwB,GAAD,OAAc3B,IAAM+C,KAAK,oBAAoBpB,GAAMzB,MAAK,SAACC,GAAD,OAAWA,KI8BjE6C,CAAW,CAACjD,QAAMsC,WAASL,OAAKO,mBAAerC,MAAK,SAAAC,QACrC8C,IAAR9C,EACCjB,QAAQC,IAAI,SAEZyD,EAAWzC,EAAIQ,SAKjCjC,EAAQwE,KAAK,qBAQzB,IAEF,IAAMN,EAAa,SAACO,GAA+B,IAC3CC,EADoBC,EAAsB,wDAE3CA,GACCjB,EAAMe,EAAIhB,IACVjD,QAAQC,IAAI,YACZiE,EAAOD,EAAIhB,KAEXC,EAAMe,EAAIG,KACVF,EAAOD,EAAIG,KAGfrB,EAAQkB,EAAInB,MACZE,EAASiB,EAAIpD,OACbuC,EAAYa,EAAId,UAChBG,EAAcW,EAAIZ,aAClBrD,QAAQC,IAAIgE,GACZ,IAAIxB,EAAO,CAACK,KAAKmB,EAAInB,KAAKjC,MAAMoD,EAAIpD,MAAMsC,SAASc,EAAId,SAASE,YAAYY,EAAIZ,YAAYJ,GAAGiB,GAC/F/E,EAAMuC,YAAYe,IAwBtB,OACI,6BACI,kBAAC,EAAD,CAAQpD,KAAMF,EAAME,OADxB,qBAGMyD,EAHN,IAGajC,EAHb,IAGqBsC,EAHrB,IAGgCE,EAC5B,2CACA,sCAAYP,GACXS,EAAS,2BAAOc,MAAOvB,EAAMA,KAAK,OAAOwB,SAAU,SAACC,GAAD,OAAUxB,EAAQwB,EAAEC,OAAOH,UAAU,qCACzF,yCAAehB,GACdE,EAAS,2BAAOc,MAAOhB,EAAaP,KAAK,cAAcwB,SAAU,SAACC,GAAD,OAAUjB,EAAciB,EAAEC,OAAOH,UAAU,qCAC7G,0CAAgBlB,EAAhB,uBACCI,EAAS,2BAAOc,MAAOlB,EAAUL,KAAK,WAAWwB,SAAU,SAACC,GAAD,OAAUnB,EAAYmB,EAAEC,OAAOH,UAAU,qCACnGd,EAAS,oCAAE,4BAAQnE,QAlCT,WJ5DE,IAACqF,KI6DR,CAACxB,KAAGH,OAAKK,WAASE,eJ7DOvC,IAAM4D,IAAI,wBAAwBD,GAAUzD,MAAK,SAACC,GAAD,OAAOA,EAAIQ,SI6DrDT,MAAK,SAACC,GAAD,OAC5CA,EAAI6B,KACJ3D,EAAMyC,eAAe,CAACkB,KAAK7B,EAAI6B,KAAKO,YAAYpC,EAAIoC,YAAYF,SAASlC,EAAIkC,WAC5EnD,QAAQC,IAAI,YACfe,MAAK,kBAAIwC,GAAU,QA6BJ,QAA2C,4BAAQpE,QA3BlD,WAClB2D,EAAQ5D,EAAMqD,QAAQM,MACtBM,EAAYjE,EAAMqD,QAAQW,UAC1BG,EAAcnE,EAAMqD,QAAQa,aAC5BG,GAAU,KAuBkD,WAAoD,4BAAQpE,QAAS,kBAAKoE,GAAU,KAAhC,UAC5G,0CACA,4BAAQpE,QAvBK,YJvEO,SAAC6D,GAAD,OAAYnC,IAAM6D,OAAO,yBAAyB1B,EAAGA,GAAIjC,MAAK,SAACC,GAAD,OAAOA,EAAI2C,WIwEjGgB,CAAiB3B,GAChBjC,MAAK,SAAC4C,GACM,MAATA,EAAazE,EAAM0C,aAAa7B,QAAQC,IAAI,YAE/Ce,MAAK,WACF7B,EAAME,KAAKsB,cAiBX,qBChDG2B,eAfS,SAAEC,GACtB,MAAO,CACHC,QAAQD,EAAME,KACdoC,QAAQtC,EAAMR,MAAMA,UAGD,SAACW,GACxB,OAAO,aACHA,YACGC,YAAmB,CAClBb,eACDY,MAIIJ,EAhDqC,SAACnD,GAAe,IAAD,EAC5ByD,mBAAc,IADc,mBACxDkC,EADwD,KAC1CC,EAD0C,OAEzBnC,mBAAc,IAFW,mBAExDoC,EAFwD,KAE3CC,EAF2C,KAI/DvF,qBAAU,WLAgBoB,IAAMC,IAAI,qBAAqBC,MAAK,SAACC,GAAD,OAAOA,EAAIQ,QKEpET,MAAK,SAACkE,GACH/F,EAAM2C,YAAYoD,GAClBH,EAAWG,EAAIC,QAAO,SAACC,GAAD,OAAWA,EAAGvE,QAAU1B,EAAMqD,QAAQ3B,eAElE,IAcF,OACI,6BACI,2BAAOwE,YAAY,cAAcf,SAdhB,SAACgB,GACtB,IAAMC,EAAcT,EAAaK,QAAO,SAASK,GAC/C,OACyC,IADlCA,EAAKrC,SAASsC,cAAcC,OACjCJ,EAAMd,OAAOH,MAAMoB,kBAEG,KAAvBH,EAAMd,OAAOH,MACZY,EAAe,IAEfA,EAAeM,MAOdP,EAAYW,KAAI,SAACP,GAAU,OAAO,oCAAE,2BAAIA,EAAGjC,UAAa,4BAAQ/D,QAAS,kBAAID,EAAMyG,UAAUR,EAAGvE,SAAxC,iB,iBC0BtDyB,eAlBS,SAAEC,GACtB,MAAO,CACHC,QAAQD,EAAME,KACdoC,QAAQtC,EAAMR,MAAMA,MACpBE,KAAKM,EAAMsD,SAASA,aAID,SAACnD,GACxB,OAAO,aACHA,YACGC,YAAmB,CAClBP,cACAF,WACDQ,MAIIJ,EApD2C,SAACnD,GAAe,IAAD,EAC9CyD,mBAAc,IADgC,gCAE3CA,mBAAc,KAF6B,mBAE9DkD,EAF8D,KAEtDC,EAFsD,OAG9CnD,mBAAc,IAHgC,mBAG9DT,EAH8D,KAGzD6D,EAHyD,KAIjExG,EAAUC,cAEdC,qBAAU,WACNsG,EAAQ7G,EAAMsC,KAAKU,MACnB4D,EAAQ5G,EAAMsC,KAAKoE,YAErB,IAVmE,MAWtCjD,mBAAS,kCAAD,OAAmCqD,gYAAYC,OAXjB,mBAW9DC,EAX8D,KAY/DC,GAZ+D,KAYtDC,IAAeF,IAE9BzG,qBAAU,WACN0G,EAAOE,GAAG,gBAAgB,SAAC7E,GACvBzB,QAAQC,IAAI,aAAawB,SAUjC,OACI,6BACG,2BAAIU,GACJ,4BAAQ/C,QATA,WACXD,EAAMiD,YAAY0D,GAClB9F,QAAQC,IAAI,WAAWd,EAAMsC,MAC7BtC,EAAM+C,QAAQC,GACd3C,EAAQwE,KAAK,WAKV,eCEIuC,EAjCwC,SAACpH,GAAe,IAAD,EAC3CyD,mBAAc,IAD6B,mBAC3DnB,EAD2D,KACtD+E,EADsD,OAEnC5D,mBAAS,kCAAD,OAAmCqD,gYAAYC,OAFpB,mBAE3DC,EAF2D,UAGnDE,IAAeF,GAe9B,OAbAzG,qBAAU,WPIc,IAACmB,KOHR1B,EAAM0B,MPGgBC,IAAMC,IAAI,4BAA4BF,EAAMA,GAAOG,MAAK,SAACC,GAAD,OAAOA,EAAIQ,SOH5ET,MAAK,SAAAC,GAC3BuF,EAAQvF,QASd,IAGE,6BACKQ,EAAKkE,KAAI,SAACP,GACP,OACI,oCACI,kBAAC,EAAD,CAAU3D,KAAM2D,UC4DzB9C,eAjBS,SAAEC,GACtB,MAAO,CACHC,QAAQD,EAAME,KACdoC,QAAQtC,EAAMR,MAAMA,UAGD,SAACW,GACxB,OAAO,aACHA,YACGC,YAAmB,CAClBb,cACAI,WACDQ,MAKIJ,EA1EmC,SAACnD,GAAc,MAEtCyD,oBAAkB,GAFoB,gCAGvCA,mBAAc,KAHyB,gCAW9BA,mBAAS,kCAAD,OAAmCqD,gYAAYC,QAXzB,mBAWtDC,EAXsD,KAYvDC,GAZuD,KAY9CC,IAAeF,IAC1B3G,EAAUC,cACdC,qBAAU,WACkB,KAArBP,EAAMqD,QAAQM,MACbtD,EAAQwE,KAAK,UAEgC,OAA9CyC,aAAaC,QAAQvH,EAAMqD,QAAQ3B,QAClC4F,aAAaE,QAAQxH,EAAMqD,QAAQ3B,MAAM,WAE/C,IAmBF,OANAnB,qBAAU,WACN0G,EAAOE,GAAG,gBAAgB,SAAC7E,GACvBzB,QAAQC,IAAI,uBAAuBwB,SAKvC,6BACI,6BACI,kBAAC,EAAD,CAAQpC,KAAMF,EAAME,OAMpB,kBAAC,EAAD,CAAOuG,UA3BD,SAACzC,GACf,IRzB2ByD,EAAQC,EQyB7BpF,EAAM,CACRmF,IAAIzD,EACJ0D,IAAI1H,EAAMqD,QAAQ3B,OAEtBb,QAAQC,IAAI,OAAOwB,IR7BQmF,EQ8BRnF,EAAKmF,IR9BWC,EQ8BPpF,EAAKoF,IR9Bc/F,IAAMC,IAAI,sBAAsB6F,EAAI,IAAIC,GAAK7F,MAAK,SAACC,GAAD,OAAOA,EAAIQ,SQ8BtET,MAAK,SAACC,GACxCiB,EAAQjB,EAAIkB,MACZ3C,EAAQwE,KAAK,eAqBT,kBAAC,EAAD,CAAUnD,MAAO1B,EAAMqD,QAAQ3B,aCtDhCiG,EAT2C,SAAC3H,GACzD,OACI,kEAEI,0BAAQC,QAAS,kBAAID,EAAME,KAAKC,UAAhC,WCuFKgD,eAlBS,SAAEC,GACtB,MAAO,CACHC,QAAQD,EAAME,KACdoC,QAAQtC,EAAMR,MAAMA,MACpBE,KAAKM,EAAMsD,SAASA,SACpBkB,SAASxE,EAAMJ,KAAKA,SAID,SAACO,GACxB,OAAO,aACHA,YACGC,YAAmB,CAClBX,UAAQK,cACTK,MAIIJ,EAhFmC,SAACnD,GAAe,IAAD,EAC9ByD,mBAAS,kCAAD,OAAmCqD,gYAAYC,OADzB,mBACtDC,EADsD,aAGtCvD,mBAAS,KAH6B,mBAGtDX,EAHsD,KAGjD8D,EAHiD,OAIhCnD,mBAAc,IAJkB,mBAItDoE,EAJsD,KAKzDxH,GALyD,KAK/CC,eACR2G,EAASC,IAAeF,GAc9BzG,qBAAU,WAE2C,UAA9C+G,aAAaC,QAAQvH,EAAMqD,QAAQ3B,SAClCuF,EAAOa,KAAK,WAAY9H,EAAM4H,UAC9BN,aAAaE,QAAQxH,EAAMqD,QAAQ3B,MAAM,WAE/C,IAMFnB,qBAAU,WACN0G,EAAOE,GAAG,gBAAgB,SAAC7E,GACvBzB,QAAQC,IAAI,WAAW+G,GACpBvF,EAAKZ,QAAU1B,EAAMqD,QAAQ3B,OAC5B1B,EAAM6C,QAAQ,CAACC,KAAKR,EAAKqE,QAAQhD,KAAKrB,EAAKqB,aAWvD,OACI,6BACI,4BAAQ1D,QARE,WAEdD,EAAMkD,aACN7C,EAAQwE,KAAK,YAMR7E,EAAM4H,SACN5H,EAAM8C,KAAK0D,KAAI,SAACP,GACb,OAAO,2BAAIA,EAAGtC,KAAP,OAAiBsC,EAAGnD,SAE/B,2BAAOoC,MAAOpC,EAAMqC,SAAU,SAACC,GAAD,OAASwB,EAAQxB,EAAEC,OAAOH,UACxD,4BAAQjF,QA/CD,WACXY,QAAQC,IAAI,OAAOd,EAAM4H,UACzB,IAAMX,EAASC,IAAeF,GAC9BhH,EAAM6C,QAAQ,CAACC,OAAKa,KAAK3D,EAAMqD,QAAQM,OACvCsD,EAAOa,KAAK,oBAAqB9H,EAAM4H,SAAU9E,EAAM9C,EAAMqD,QAAQ3B,MAAO1B,EAAMqD,QAAQM,MAC1F,IVVmBoE,EUUfzF,EAAOtC,EAAM8C,KACjBR,EAAKuC,KAAK,CAAC/B,OAAKa,KAAK3D,EAAMqD,QAAQM,OACnC9C,QAAQC,IAAI,2BVZOiH,EUaR,CAAC/E,KAAKhD,EAAM4H,SAAS9E,KAAKR,GVbDX,IAAM4D,IAAI,wBAAwBwC,GAAUlG,MAAK,SAACC,GAAD,OAAOA,EAAIQ,QUchGsE,EAAQ,MAsCJ,YC1BGoB,EAnCa,SAAChI,GACzB,IAAME,EAAOF,EAAME,KACnB,OACI,oCACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOe,KAAK,SAASC,OAAK,EAACC,OAAQ,SAAAnB,GAAK,OAAIE,EAAKkB,kBACzC,kBAAC,EAAD,CAAOlB,KAAMA,IAEb,kBAAC,IAAD,CAAUmB,GAAG,SAGrB,kBAAC,IAAD,CAAOJ,KAAK,QAAQC,OAAK,EAACC,OAAQ,SAAAnB,GAAK,OAAIE,EAAKkB,kBACxC,kBAAC,EAAD,CAAMlB,KAAMA,IAEZ,kBAAC,IAAD,CAAUmB,GAAG,SAGrB,kBAAC,IAAD,CAAOJ,KAAK,YAAYC,OAAK,EAACC,OAAQ,SAAAnB,GAAK,OAAIE,EAAKkB,kBAC5C,kBAAC,EAAD,CAAUlB,KAAMA,IAEhB,kBAAC,IAAD,CAAUmB,GAAG,SAGrB,kBAAC,IAAD,CAAOJ,KAAK,QAAQC,OAAK,EAACC,OAAQ,SAAAnB,GAAK,OAAIE,EAAKkB,kBACxC,kBAAC,EAAD,CAAMlB,KAAMA,IAEZ,kBAAC,IAAD,CAAUmB,GAAG,Y,wBCnCZ4G,E,WACnB,WAAY5H,GAAU,IAAD,gCAcrBF,MAAQ,WACN,EAAK+H,MAAMC,aAfQ,KAkBrBpH,qBAAuB,SAACV,GACtB,EAAK6H,MAAME,WAAU,SAACC,EAAKC,GACrBA,GAAcA,EAAWC,aAAeD,EAAWE,SACrD,EAAKC,WAAWH,GAChBzH,QAAQC,IAAI,GACZT,EAAQwE,KAAK,WACJwD,IACTxH,QAAQC,IAAI,GACZT,EAAQwE,KAAK,KACb6D,MAAM,UAAD,OAAWL,EAAIM,MAAf,6CACL9H,QAAQC,IAAIuH,QA5BG,KAiCrBI,WAAa,SAAAH,GACXzH,QAAQC,IAAIwH,GAEZ,IAAMM,EAAYC,KAAKC,UACE,IAAvBR,EAAWS,WAAmB,IAAIC,MAAOC,WAOrCC,EAASZ,EAAWa,OAAS,EAAKC,iBAAmB,GAE3D9B,aAAaE,QAAQ,eAAgBc,EAAWC,aAChDjB,aAAaE,QAAQ,WAAYc,EAAWE,SAC5ClB,aAAaE,QAAQ,aAAcoB,GACnCtB,aAAaE,QAAQ,SAAUqB,KAAKC,UAAUI,KAjD3B,KAyDrB1H,OAAS,WACP8F,aAAa+B,WAAW,gBACxB/B,aAAa+B,WAAW,YACxB/B,aAAa+B,WAAW,cACxB/B,aAAa+B,WAAW,UACxB,EAAKC,YAAc,KACnB,EAAKpB,MAAM1G,OAAO,CAChB+H,SAAUzC,mCACV0C,SAAS,oCAjEQ,KAqErBC,eAAiB,WACf,IAAMlB,EAAcjB,aAAaC,QAAQ,gBACzC,IAAKgB,EACH,MAAM,IAAI3H,MAAM,0BAElB,OAAO2H,GA1EY,KA6ErB/D,WAAa,SAAAkF,GACX,GAAI,EAAKJ,YAAa,OAAOI,EAAG,EAAKJ,aACrC,EAAKpB,MAAMyB,OAAOC,SAAS,EAAKH,kBAAkB,SAACpB,EAAKrG,GAClDA,IAAS,EAAKsH,YAActH,GAChC0H,EAAG1H,EAASqG,OAhFdwB,KAAKxJ,QAAUA,EACfwJ,KAAKP,YAAc,KACnBO,KAAKT,gBAAkB,oCACvBS,KAAK3B,MAAQ,IAAIA,IAAM4B,QAAQ,CAC7BC,OAAQ,gCACRR,SAAU,mCACVS,YAAY,0CACZC,aAAc,iBACdd,MAAOU,KAAKT,kBAEdvI,QAAQC,IAAI+I,M,8DA0CZ,IAAMjB,EAAYC,KAAKqB,MAAM5C,aAAaC,QAAQ,eAClD,OAAO,IAAIyB,MAAOC,UAAYL,I,oCA+BlBM,GACZ,IAAMiB,GACJtB,KAAKqB,MAAM5C,aAAaC,QAAQ,YAAc,IAC9C6C,MAAM,KACR,OAAOlB,EAAOmB,OAAM,SAAAlB,GAAK,OAAIgB,EAAcG,SAASnB,U,KCxEzCoB,EAdK,SAACvK,GACHM,cACdO,QAAQC,IAAId,EAAMK,SAClB,IAAMH,EAAO,IAAI+H,EAAKxH,OAAOJ,SAC5B,OACG,6BACI,kBAAC,IAAD,KACI,kBAAC,EAAD,eAAUH,KAAMA,GAAUF,IAC1B,kBAAC,EAAD,CAAME,KAAMA,OCFRsK,QACW,cAA7B/J,OAAOC,SAAS+J,UAEe,UAA7BhK,OAAOC,SAAS+J,UAEhBhK,OAAOC,SAAS+J,SAASC,MACvB,2D,YClBOC,EAAe,SAACC,EAAeC,GACxC,OAAO,2BACAD,GACAC,ICALC,EAAmB,CACrBhH,GAAG,EACHH,KAAK,GACLjC,MAAM,GACNsC,SAAS,GACTE,YAAY,GACZI,QAAO,GAmCIhB,EAhCF,WAAwC,IAAvCF,EAAsC,uDAA1B0H,EAAaC,EAAa,uCAChD,OAAQA,EAAOvI,MACX,IbdqB,gBaejB,OAAOmI,EAAavH,EAAM,CACtBU,GAAGiH,EAAOzI,KAAKwB,GACfH,KAAKoH,EAAOzI,KAAKqB,KACjBjC,MAAMqJ,EAAOzI,KAAKZ,MAClBsC,SAAS+G,EAAOzI,KAAK0B,SACrBE,YAAY6G,EAAOzI,KAAK4B,YACxBI,QAAO,IAEf,IbtBwB,mBauBpB,OAAOqG,EAAavH,EAAM,CACtBO,KAAKoH,EAAOzI,KAAKqB,KACjBK,SAAS+G,EAAOzI,KAAK0B,SACrBE,YAAY6G,EAAOzI,KAAK4B,cAEhC,Ib3BmB,ca4Bf,OAAOyG,EAAavH,EAAM,CACtBU,GAAG,EACHH,KAAK,GACLjC,MAAM,GACNsC,SAAS,GACTE,YAAY,GACZI,QAAO,IAEf,QACI,OAAOlB,I,QCpCb0H,EAAmB,CACrBlI,MAAM,IAeKA,GAZD,WAAwC,IAAvCQ,EAAsC,uDAA1B0H,EAAaC,EAAa,uCACjD,OAAQA,EAAOvI,MACX,IdNe,UcOX,OAAOmI,EAAavH,EAAM,CACtBR,MAAM,YAAImI,EAAOnI,SAEzB,QACI,OAAOQ,ICXb0H,GAAmB,CACrBpE,SAAS,IAuBEC,GApBC,WAAwC,IAAvCvD,EAAsC,uDAA1B0H,GAAaC,EAAa,uCACnD,OAAQA,EAAOvI,MACX,IfLgB,WeMZ,OAAOmI,EAAavH,EAAM,CACtBsD,SAAS,GAAD,mBAAKtD,EAAMsD,UAAX,CAAoBqE,EAAOjI,SAE3C,IfPqB,gBeQjB,OAAO6H,EAAavH,EAAM,CACtBsD,SAASqE,EAAOjI,OAExB,IfVmB,ceWf,OAAO6H,EAAavH,EAAM,CACtBsD,SAAS,KAEjB,QACI,OAAOtD,ICnBb0H,GAAmB,CACrB9H,KAAK,IAeMA,GAZF,WAAwC,IAAvCI,EAAsC,uDAA1B0H,GAAaC,EAAa,uCAChD,OAAQA,EAAOvI,MACX,IhBJgB,WgBKZ,OAAOmI,EAAavH,EAAM,CACtBJ,KAAK+H,EAAO/H,OAEpB,QACI,OAAOI,ICDb4H,GAAcC,YAAgB,CAClC3H,KAAKA,EACLV,MAAMA,GACN8D,SAASA,GACT1D,KAAKA,KAcDkI,GAAoBzK,QAAWA,OAAe0K,sCAAyCC,IAEvFC,GAAQC,YAAYN,GAAaE,GAAiBK,aAbzC,SAACF,GACd,OAAO,SAACG,GACJ,OAAO,SAACT,GACJlK,QAAQC,IAAI,2BAA4BiK,GACxC,IAAM1I,EAASmJ,EAAKT,GAEpB,OADAlK,QAAQC,IAAI,0BAA2BuK,EAAMI,YACtCpJ,MAO+DqJ,OAEhFC,IAASxK,OACP,kBAAC,IAAD,CAAUkK,MAAOA,IACf,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SNkGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpK,MAAK,SAAAqK,GACJA,EAAaC,gBAEdC,OAAM,SAAAzD,GACL9H,QAAQ8H,MAAMA,EAAMhC,a","file":"static/js/main.b08edd1a.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\ninterface ISingInLogInProps {\r\n    auth:any\r\n}\r\n\r\nconst SingInLogIn: React.FunctionComponent<ISingInLogInProps> = (props) => {\r\n    return (\r\n        <div>\r\n            Hello from singin login\r\n            <button onClick={props.auth.login}>Log In</button>\r\n            <button onClick={props.auth.login}>Sing In</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SingInLogIn;\r\n","import React,{FC , useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\ninterface ICallBackProps {\r\n    auth:any,\r\n    location:any\r\n}\r\n\r\nconst CallBack:FC<ICallBackProps> = (props) => {\r\n    let history = useHistory();\r\n    useEffect(()=>{\r\n        if (/access_token|id_token|error/.test(window.location.hash)) {\r\n            console.log(history)\r\n            props.auth.handleAuthentication(history)\r\n       \r\n          } else {\r\n            throw new Error(\"Invalid callback URL.\");\r\n          }\r\n    },[])\r\n    return (\r\n        <div>\r\n            Loading...\r\n        </div>\r\n  )\r\n};\r\n\r\nexport default CallBack;\r\n","import  React ,{FC} from 'react';\r\nimport {Route,Switch, Redirect} from 'react-router-dom';\r\nimport SingInLogIn from \"../containers/SingInLogIn\"\r\nimport CallBack from \"../containers/CallBack\"\r\nimport Main from \"../containers/Main\";\r\n\r\ninterface IGreetingProps {\r\n    auth:any,\r\n    location:any\r\n}\r\n\r\nconst Greeting:FC<IGreetingProps> = (props:IGreetingProps) => {\r\n    const auth = props.auth\r\n    return( \r\n        <Switch>\r\n            <Route path=\"/\" exact render={props => auth.isAuthenticated() ? (\r\n                    <Redirect to=\"/about\"/>\r\n                ):(\r\n                    <SingInLogIn auth={auth}/>\r\n                )\r\n            }/>\r\n        \r\n            <Route path=\"/callback\" exact>\r\n                <CallBack auth={props.auth} {...props}/>\r\n            </Route>\r\n        </Switch>\r\n    )\r\n};\r\n\r\nexport default Greeting;\r\n","import * as React from 'react';\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\ninterface IHeaderProps {\r\n    auth:any\r\n}\r\n\r\nconst Header: React.FunctionComponent<IHeaderProps> = (props) => {\r\n    return (\r\n        <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            \r\n                <ul className=\"navbar-nav\">        \r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/main\">Main</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/about\">About</NavLink>\r\n                    </li>\r\n                    <button className=\"nav-item\" onClick={()=>props.auth.logout()}>\r\n                        LogOut\r\n                    </button>\r\n                </ul>\r\n           \r\n        </nav>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\"\r\n\r\nexport const createUser = (user:any) => axios.post(\"/api/users/create\",user).then((res:any)=>res)\r\n\r\nexport const isUserExist = (email:any) => \r\n    axios.get(\"/api/users/search/\"+email,email).then( (res)=>{\r\n    console.log(\"resultFull\"+res)\r\n    return res\r\n})\r\n\r\nexport const updateUser = (userData:any) => axios.put(\"/api/users/updateUser\",userData).then((res)=>res.data)\r\n\r\nexport const deleteUserAcount = (id:any) => axios.delete(\"/api/users/deleteUser/\"+id,id).then((res)=>res.status)\r\n\r\nexport const getUsers = () => axios.get(\"/api/users/getAll\").then((res)=>res.data)\r\n\r\nexport const createOrSearchChat = (id1:any,id2:any) => axios.get(\"/api/rooms/getRoom/\"+id1+\"/\"+id2).then((res)=>res.data)\r\n\r\nexport const getChatUsers = (email:any) => axios.get(\"/api/rooms/getRoomsUsers/\"+email,email).then((res)=>res.data)\r\n\r\nexport const updateMess = (messData:any) => axios.put(\"/api/rooms/updateMess\",messData).then((res)=>res.data)","import {isUserExist} from \"../api/userApi\"\r\n\r\n export const userAuth = async (profile:any) =>{\r\n        console.log(!profile.email_vefified)\r\n        if(profile.email_verified){\r\n            return true            \r\n        }else{\r\n            return false\r\n        }\r\n}\r\n\r\nexport const getUser = async (email:any) =>{ \r\n    const result = await isUserExist(email)\r\n    return await result.data\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const setUserData = (data:any) => {\r\n    return {\r\n        type: actionTypes.SET_USER_DATA,\r\n        data:data\r\n    };\r\n};\r\n\r\nexport const updateUserData = (data:any) => {\r\n    return {\r\n        type: actionTypes.UPDATE_USER_DATA,\r\n        data:data\r\n    };\r\n};\r\n\r\nexport const deleteUser = () => {\r\n    return {\r\n        type: actionTypes.DELETE_USER,\r\n    };\r\n};\r\n\r\nexport const getAllUsers = (users:any) => {\r\n    return {\r\n        type: actionTypes.GET_ALL,\r\n        users:users\r\n    };\r\n};\r\n\r\nexport const addMess = (mess:any) => {\r\n    return {\r\n        type: actionTypes.ADD_MESS,\r\n        mess:mess\r\n    };\r\n};\r\n\r\nexport const addRoom = (room:any) => {\r\n    return {\r\n        type: actionTypes.ADD_ROOM,\r\n        room:room\r\n    };\r\n};\r\n\r\nexport const addInitMess = (mess:any) => {\r\n    return {\r\n        type: actionTypes.ADD_INIT_MESS,\r\n        mess:mess\r\n    };\r\n};\r\n\r\nexport const removeMess = () => {\r\n    return {\r\n        type: actionTypes.REMOVE_MESS\r\n    }\r\n}","export const SET_USER_DATA = 'SET_USER_DATA';\r\nexport const UPDATE_USER_DATA = 'UPDATE_USER_DATA';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const GET_ALL = 'GET_ALL';\r\nexport const ADD_MESS = 'ADD_MESS';\r\nexport const ADD_ROOM = 'ADD_ROOM';\r\nexport const ADD_INIT_MESS = 'ADD_INIT_MESS'\r\nexport const REMOVE_MESS = 'REMOVE_MESS'","import React,{useEffect,useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from '../components/Header'\r\nimport {createUser,updateUser,deleteUserAcount} from \"../api/userApi\"\r\nimport {userAuth,getUser} from \"../services/auth.service\"\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setUserData,updateUserData,deleteUser} from \"../store/actions/actions\";\r\n\r\ninterface IAboutProps {\r\n    auth:any\r\n}\r\n\r\nconst About: React.FunctionComponent<IAboutProps> = (props:any) => {\r\n    const [user,setUser] = useState<any>('')\r\n    const [name,setName] = useState<any>('')\r\n    const [email,setEmail] = useState<any>('')\r\n    const [id,setId] = useState<any>('')\r\n    const [nickname,setNickname] = useState<any>('')\r\n    const [family_name,setFamilyName] = useState<any>('')\r\n    const [update,setUpdate] = useState<boolean>(false)\r\n\r\n    const history = useHistory()\r\n    useEffect(()=>{\r\n        if(!props.userInf.isAuth){\r\n            props.auth.getProfile((profile:any)=>{\r\n                setUser(profile)\r\n                const {email,nickname,name,family_name} = profile        \r\n                userAuth(profile).then((res:any)=> res ? \r\n                    getUser(email).then((res:any) => \r\n                        res.status!==404 ?\r\n                            showObject(res):\r\n                            createUser({email,nickname,name,family_name})).then(res=>{\r\n                                if(res === undefined){\r\n                                    console.log(\"error\")\r\n                                }else{\r\n                                    showObject(res.data)\r\n                                }\r\n                            })\r\n                \r\n                \r\n                : history.push('/verified'))\r\n                // .then((dat:any) => \r\n                //             userAuth(profile).then((res:any)=> res ? dat ? console.log(dat) :  console.log(\"heredata\"+dat)//createUser({email,nickname,name,family_name})\r\n                //         : history.push('/verified')))\r\n            })\r\n        }else{\r\n            showObject(props.userInf,true)\r\n        }\r\n    },[])\r\n\r\n    const showObject = (obg:any,idd:boolean = false)=>{\r\n        let userId\r\n        if(idd){\r\n            setId(obg.id)\r\n            console.log(\"hereTrue\")\r\n            userId=obg.id\r\n        }else{\r\n            setId(obg._id)\r\n            userId=obg._id\r\n        }\r\n    \r\n        setName(obg.name)\r\n        setEmail(obg.email)\r\n        setNickname(obg.nickname)\r\n        setFamilyName(obg.family_name)\r\n        console.log(obg)\r\n        let user = {name:obg.name,email:obg.email,nickname:obg.nickname,family_name:obg.family_name,id:userId}\r\n        props.setUserData(user)\r\n    }\r\n    const saveUpdates = () => {\r\n        updateUser({id,name,nickname,family_name}).then((res:any)=>\r\n            res.name ? \r\n            props.updateUserData({name:res.name,family_name:res.family_name,nickname:res.nickname})\r\n            :console.log('error')\r\n        ).then(()=>setUpdate(false))\r\n    }    \r\n    const canselUpdates = () => {\r\n        setName(props.userInf.name)\r\n        setNickname(props.userInf.nickname)\r\n        setFamilyName(props.userInf.family_name)\r\n        setUpdate(false)\r\n    }\r\n    const deleteAcount = () =>{\r\n        deleteUserAcount(id)\r\n        .then((status)=>{\r\n            status===200?props.deleteUser():console.log(\"error\")\r\n        })\r\n        .then(()=>{\r\n            props.auth.logout()\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Header auth={props.auth}/>\r\n            Hello from about\r\n            -{name}-{email}-{nickname}-{family_name}\r\n            <p>Your Account</p>\r\n            <p>Name -- {name}</p>\r\n            {update ? <input value={name} name=\"name\" onChange={(e:any)=> setName(e.target.value)}/>:<></>}\r\n            <p>Surname -- {family_name}</p>\r\n            {update ? <input value={family_name} name=\"family_name\" onChange={(e:any)=> setFamilyName(e.target.value)}/>:<></>}\r\n            <p>Nickname -- {nickname} users can find you</p>\r\n            {update ? <input value={nickname} name=\"nickname\" onChange={(e:any)=> setNickname(e.target.value)}/>:<></>}\r\n            { update ? <><button onClick={saveUpdates}>Save</button><button onClick={canselUpdates}>Cansel</button></>: <button onClick={()=> setUpdate(true)}>Update</button> }\r\n            <p>Danger Zone</p>\r\n            <button onClick={deleteAcount}>DELETE ACOUNT</button>   \r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ( state:{user:any} ) => {\r\n    return {\r\n        userInf:state.user\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n           setUserData,\r\n           updateUserData,\r\n           deleteUser\r\n        }, dispatch)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(About);\r\n","import React,{useState, useEffect} from 'react';\r\nimport {getUsers,createOrSearchChat} from \"../api/userApi\"\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {getAllUsers} from \"../store/actions/actions\";\r\n\r\ninterface IUsersProps {\r\n  startChat:any\r\n}\r\n\r\nconst Users: React.FunctionComponent<IUsersProps> = (props:any) => {\r\n    const [inetialUsers, setInitial] = useState<any>([])\r\n    const [filterUsers, setFilterUsers] = useState<any>([])\r\n    \r\n    useEffect(()=>{\r\n        getUsers()\r\n        .then((arr) => {\r\n            props.getAllUsers(arr)\r\n            setInitial(arr.filter((el:any)=> el.email !== props.userInf.email))\r\n        })\r\n    },[])\r\n    \r\n    const filterUsersInput = (event:any) =>{\r\n        const updatedList = inetialUsers.filter(function(item:any){\r\n          return item.nickname.toLowerCase().search(\r\n            event.target.value.toLowerCase()) !== -1;\r\n        });\r\n        if(event.target.value === ''){\r\n            setFilterUsers([])\r\n        }else{\r\n            setFilterUsers(updatedList)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input placeholder=\"Search user\" onChange={filterUsersInput}/>\r\n            {filterUsers.map((el:any)=>{return <><p>{el.nickname}</p><button onClick={()=>props.startChat(el.email)}>Chat+</button></>})}\r\n            {/* {props.users.map((el:any)=>{return <><p>{el.nickname}</p><button onClick={()=>props.startChat(el.email)}>Chat+</button></>})} */}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ( state:{user:any,users:any} ) => {\r\n    return {\r\n        userInf:state.user,\r\n        userAll:state.users.users\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            getAllUsers\r\n        }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Users);\r\n//  export default Users","import React,{useState, useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {addRoom,addInitMess} from \"../store/actions/actions\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport socketIOClient from 'socket.io-client'\r\n\r\ninterface IChatItemProps {\r\n    data:any\r\n}\r\n\r\nconst ChatItem: React.FunctionComponent<IChatItemProps> = (props:any) => {\r\n    const [item,setItem] = useState<any>([])\r\n    const [message,setMess] = useState<any>([])\r\n    const [room,setRoom] = useState<any>('')\r\n    let history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        setRoom(props.data.room)\r\n        setMess(props.data.messages)\r\n        \r\n    },[])\r\n    const [endpoint,setEndpoint] = useState(`https://practick.herokuapp.com:${process.env.PORT}`)\r\n    const socket = socketIOClient(endpoint);\r\n\r\n    useEffect(()=>{\r\n        socket.on('chat-message', (data:any) => {\r\n            console.log(\"heredata11\"+data)      \r\n        })\r\n    })\r\n\r\n    const chatGo = () => {\r\n        props.addInitMess(message)\r\n        console.log(\"hereMess\"+props.data)\r\n        props.addRoom(room)\r\n        history.push('/chat')\r\n    }\r\n    return (\r\n        <div>\r\n           <p>{room}</p>\r\n           <button onClick={chatGo}>Go Chat</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ( state:{user:any,users:any,messages:any} ) => {\r\n    return {\r\n        userInf:state.user,\r\n        userAll:state.users.users,\r\n        mess:state.messages.messages,\r\n        \r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            addInitMess,\r\n            addRoom\r\n        }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ChatItem);\r\n","import React,{useState, useEffect} from 'react';\r\nimport {getChatUsers} from \"../api/userApi\"\r\nimport ChatItem from '../components/ChatItem'\r\nimport socketIOClient from 'socket.io-client'\r\n\r\ninterface IUsersProps {\r\n    email:any\r\n}\r\n\r\nconst ChatList: React.FunctionComponent<IUsersProps> = (props:any) => {\r\n    const [data,setData] = useState<any>([])\r\n    const [endpoint,setEndpoint] = useState(`https://practick.herokuapp.com:${process.env.PORT}`)\r\n    const socket = socketIOClient(endpoint);\r\n\r\n    useEffect(()=>{\r\n        getChatUsers(props.email).then(res=>{\r\n            setData(res)\r\n            // res.map((el:any)=>{\r\n            //     console.log(\"11111111111111\"+res)\r\n            //     if(localStorage.getItem(el.room) === null){\r\n            //         localStorage.setItem(el.room, 'false');\r\n            //     }\r\n            // })\r\n            \r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            {data.map((el:any)=>{\r\n                return (\r\n                    <>\r\n                        <ChatItem data={el}/>\r\n                    </>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default ChatList;","import React,{useState, useEffect} from 'react';\r\nimport Header from '../components/Header'\r\nimport Chat from './Chat'\r\nimport {getUsers,createOrSearchChat} from \"../api/userApi\"\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {getAllUsers,addRoom} from \"../store/actions/actions\";\r\n// import { serialize } from 'v8';\r\n// import user from '../store/reducers/user';\r\nimport Users from './Users'\r\nimport ChatList from './ChatList'\r\nimport { useHistory } from 'react-router-dom';\r\nimport socketIOClient from 'socket.io-client'\r\n\r\ninterface IMainProps {\r\n  auth:any\r\n}\r\n\r\nconst Main: React.FunctionComponent<IMainProps> = (props:any) => {\r\n    // const [users,setUsers] = useState<any>([])\r\n    const [chat,setChat] = useState<boolean>(false)\r\n    const [room,setRoom] =useState<any>('')\r\n    // useEffect(()=>{\r\n    //     getUsers()\r\n    //     .then((arr) => {\r\n    //         props.getAllUsers(arr)\r\n    //         setUsers(arr.filter((el:any)=> el.email !== props.userInf.email))\r\n    //     })\r\n    // },[])\r\n    const [endpoint,setEndpoint] = useState(`https://practick.herokuapp.com:${process.env.PORT}`)\r\n    const socket = socketIOClient(endpoint);\r\n    let history = useHistory();\r\n    useEffect(()=>{\r\n        if(props.userInf.name===''){\r\n            history.push('/about')\r\n        }\r\n        if(localStorage.getItem(props.userInf.email) === null){\r\n            localStorage.setItem(props.userInf.email,'false')\r\n        }        \r\n    },[])\r\n    const startChat = (nickname:any) =>{\r\n        const data ={\r\n            id1:nickname,\r\n            id2:props.userInf.email\r\n        }\r\n        console.log(\"chat\"+data)\r\n        createOrSearchChat(data.id1,data.id2).then((res)=>{\r\n            addRoom(res.room)\r\n            history.push('/chat')\r\n        })\r\n\r\n    }\r\n    useEffect(()=>{\r\n        socket.on('chat-message', (data:any) => {\r\n            console.log(\"heredata121212121212\"+data)\r\n        })\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Header auth={props.auth}/>\r\n                {/* {chat ? <Chat room={room} name={props.userInf.name}/>:\r\n                <>\r\n                    Hello from Main\r\n                    {users.map((el:any)=>{return <><p>{el.nickname}</p><button onClick={()=>startChat(el.email)}>Chat+</button></>})}\r\n                </>} */}\r\n                <Users startChat={startChat}/>\r\n\r\n                <ChatList email={props.userInf.email}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ( state:{user:any,users:any} ) => {\r\n    return {\r\n        userInf:state.user,\r\n        userAll:state.users.users\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            getAllUsers,\r\n            addRoom\r\n        }, dispatch)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Main);\r\n// export default Main","import * as React from 'react';\r\n\r\ninterface IAuthPageProps {\r\n    auth:any\r\n}\r\n\r\nconst AuthPage: React.FunctionComponent<IAuthPageProps> = (props) => {\r\n  return (\r\n      <div>\r\n          Please verifide your account and log \r\n          <button onClick={()=>props.auth.login() }>Login</button>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default AuthPage;\r\n","import React,{useState, useEffect} from 'react';\r\n\r\nimport socketIOClient from 'socket.io-client'\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {addMess, removeMess} from \"../store/actions/actions\";\r\nimport Header from '../components/Header';\r\nimport { userInfo } from 'os';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {updateMess} from \"../api/userApi\"\r\n\r\n\r\n//const socket = io.connect('http://localhost:5000')\r\ninterface IMainProps {\r\n    auth:any\r\n}\r\n\r\nconst Chat: React.FunctionComponent<IMainProps> = (props:any) => {\r\n    const [endpoint,setEndpoint] = useState(`https://practick.herokuapp.com:${process.env.PORT}`)\r\n\r\n    const [mess,setMess] = useState('')\r\n    const [arrmess,setArrmess] = useState<any>([])\r\n    let history = useHistory();\r\n    const socket = socketIOClient(endpoint);\r\n\r\n    const sendMsg =()=>{\r\n        console.log(\"room\"+props.roomChat)\r\n        const socket = socketIOClient(endpoint);\r\n        props.addMess({mess,name:props.userInf.name})\r\n        socket.emit('send-chat-message', props.roomChat, mess, props.userInf.email, props.userInf.name)\r\n        let data = props.mess\r\n        data.push({mess,name:props.userInf.name})\r\n        console.log('66666666666666666666666')\r\n        updateMess({room:props.roomChat,mess:data})\r\n        setMess('')\r\n    }\r\n   \r\n    useEffect(()=>{\r\n        \r\n        if(localStorage.getItem(props.userInf.email) === 'false'){\r\n            socket.emit('new-user', props.roomChat)\r\n            localStorage.setItem(props.userInf.email,'true')\r\n        }\r\n    },[])\r\n    // useEffect(()=>{\r\n    //     socket.on('user-connected', (data:any) => {\r\n    //         localStorage.setItem(data.room,'true')\r\n    //     })\r\n    // })\r\n    useEffect(()=>{\r\n        socket.on('chat-message', (data:any) => {\r\n            console.log(\"heredata\"+arrmess)\r\n            if(data.email !== props.userInf.email){\r\n                props.addMess({mess:data.message,name:data.name})\r\n            }\r\n        })\r\n    })\r\n        \r\n    const leaveRoom = () => {\r\n        //updateMess({room:props.roomChat,mess:props.mess})\r\n        props.removeMess()\r\n        history.push('/main')\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <button onClick={leaveRoom}></button>\r\n            {props.roomChat}\r\n            {props.mess.map((el:any)=>{ \r\n                return <p>{el.name} -- {el.mess}</p>    \r\n            })}\r\n            <input value={mess} onChange={(e:any)=>setMess(e.target.value)}/>\r\n            <button onClick={sendMsg}>Send</button>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = ( state:{user:any,users:any,messages:any,room:any} ) => {\r\n    return {\r\n        userInf:state.user,\r\n        userAll:state.users.users,\r\n        mess:state.messages.messages,\r\n        roomChat:state.room.room\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({\r\n            addMess,removeMess\r\n        }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Chat);","import  React ,{FC} from 'react';\r\nimport {Route,Switch,Redirect} from 'react-router-dom';\r\nimport About from \"../containers/About\";\r\nimport Main from \"../containers/Main\";\r\nimport AuthPage from './AuthPage';\r\nimport Chat from '../containers/Chat'\r\n\r\ninterface IHomeProps {\r\n    auth:any\r\n}\r\n\r\nconst Home:FC<IHomeProps> = (props:IHomeProps) => {\r\n    const auth = props.auth\r\n    return (\r\n        <>\r\n        <Switch>\r\n            <Route path='/about' exact render={props => auth.isAuthenticated() ? (\r\n                    <About auth={auth}/>\r\n                ):(\r\n                    <Redirect to=\"/\" />\r\n                )\r\n            }/>\r\n            <Route path='/main' exact render={props => auth.isAuthenticated() ? (\r\n                    <Main auth={auth}/>\r\n                ):(\r\n                    <Redirect to=\"/\" />\r\n                )\r\n            }/>\r\n            <Route path='/verified' exact render={props => auth.isAuthenticated() ? (\r\n                    <AuthPage auth={auth}/>\r\n                ):(\r\n                    <Redirect to=\"/\" />\r\n                )\r\n            }/>\r\n            <Route path='/chat' exact render={props => auth.isAuthenticated() ? (\r\n                    <Chat auth={auth}/>\r\n                ):(\r\n                    <Redirect to=\"/\" />\r\n                )\r\n            }/>\r\n            \r\n        </Switch>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","import auth0 from \"auth0-js\";\r\n\r\nexport default class Auth {\r\n  constructor(history) {\r\n    this.history = history;\r\n    this.userProfile = null;\r\n    this.requestedScopes = \"openid profile email read:courses\";\r\n    this.auth0 = new auth0.WebAuth({\r\n      domain: \"yurii-dubnytskyi.eu.auth0.com\",\r\n      clientID: \"Vlvnr3poW9Ors21ydAosVRRpVncQlvqS\",\r\n      redirectUri: `https://practick.herokuapp.com/callback`,\r\n      responseType: \"token id_token\",\r\n      scope: this.requestedScopes\r\n    });\r\n    console.log(this)\r\n  }\r\n\r\n  login = () => {\r\n    this.auth0.authorize();\r\n  };\r\n\r\n  handleAuthentication = (history) => {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if (authResult && authResult.accessToken && authResult.idToken) {\r\n        this.setSession(authResult);\r\n        console.log(this)\r\n        history.push(\"/about\");\r\n      } else if (err) {\r\n        console.log(this)\r\n        history.push(\"/\");\r\n        alert(`Error: ${err.error}. Check the console for further details.`);\r\n        console.log(err);\r\n      }\r\n    });\r\n  };\r\n\r\n  setSession = authResult => {\r\n    console.log(authResult);\r\n    // set the time that the access token will expire\r\n    const expiresAt = JSON.stringify(\r\n      authResult.expiresIn * 1000 + new Date().getTime()\r\n    );\r\n\r\n    // If there is a value on the `scope` param from the authResult,\r\n    // use it to set scopes in the session for the user. Otherwise\r\n    // use the scopes as requested. If no scopes were requested,\r\n    // set it to nothing\r\n    const scopes = authResult.scope || this.requestedScopes || \"\";\r\n\r\n    localStorage.setItem(\"access_token\", authResult.accessToken);\r\n    localStorage.setItem(\"id_token\", authResult.idToken);\r\n    localStorage.setItem(\"expires_at\", expiresAt);\r\n    localStorage.setItem(\"scopes\", JSON.stringify(scopes));\r\n  };\r\n\r\n  isAuthenticated() {\r\n    const expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\r\n    return new Date().getTime() < expiresAt;\r\n  }\r\n\r\n  logout = () => {\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"id_token\");\r\n    localStorage.removeItem(\"expires_at\");\r\n    localStorage.removeItem(\"scopes\");\r\n    this.userProfile = null;\r\n    this.auth0.logout({\r\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\r\n      returnTo: `https://practick.herokuapp.com`\r\n    });\r\n  };\r\n\r\n  getAccessToken = () => {\r\n    const accessToken = localStorage.getItem(\"access_token\");\r\n    if (!accessToken) {\r\n      throw new Error(\"No access token found.\");\r\n    }\r\n    return accessToken;\r\n  };\r\n\r\n  getProfile = cb => {\r\n    if (this.userProfile) return cb(this.userProfile);\r\n    this.auth0.client.userInfo(this.getAccessToken(), (err, profile) => {\r\n      if (profile) this.userProfile = profile;\r\n      cb(profile, err);\r\n    });\r\n  };\r\n\r\n  userHasScopes(scopes) {\r\n    const grantedScopes = (\r\n      JSON.parse(localStorage.getItem(\"scopes\")) || \"\"\r\n    ).split(\" \");\r\n    return scopes.every(scope => grantedScopes.includes(scope));\r\n  }\r\n}\r\n","import React ,{FC}from 'react';\nimport { BrowserRouter,useHistory } from 'react-router-dom';\nimport Greeting from \"./pages/Greeting\"\nimport Home from \"./pages/Home\"\nimport Auth from \"./auth0/Auth\"\n\nconst App:FC<any> = (props:any) => {\n    let history = useHistory();\n    console.log(props.history)\n    const auth = new Auth(window.history)\n     return (\n        <div>\n            <BrowserRouter>\n                <Greeting auth={auth} {...props}/>\n                <Home auth={auth}/>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject:any, updatedValues:any) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedValues\r\n    }\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState:any = {\r\n    id:0,\r\n    name:'',\r\n    email:'',\r\n    nickname:'',\r\n    family_name:'',\r\n    isAuth:false\r\n};\r\n\r\nconst user = (state:any = initialState,action:any)=>{\r\n    switch (action.type){\r\n        case actionTypes.SET_USER_DATA:\r\n            return updateObject(state,{\r\n                id:action.data.id,\r\n                name:action.data.name,\r\n                email:action.data.email,\r\n                nickname:action.data.nickname,\r\n                family_name:action.data.family_name,\r\n                isAuth:true\r\n            })\r\n        case actionTypes.UPDATE_USER_DATA:\r\n            return updateObject(state,{\r\n                name:action.data.name,\r\n                nickname:action.data.nickname,\r\n                family_name:action.data.family_name,\r\n            })\r\n        case actionTypes.DELETE_USER:\r\n            return updateObject(state,{\r\n                id:0,\r\n                name:'',\r\n                email:'',\r\n                nickname:'',\r\n                family_name:'',\r\n                isAuth:false\r\n        })\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default user","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState:any = {\r\n    users:[]\r\n};\r\n\r\nconst users = (state:any = initialState,action:any)=>{\r\n    switch (action.type){\r\n        case actionTypes.GET_ALL:\r\n            return updateObject(state,{\r\n                users:[...action.users]\r\n            })\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default users","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState:any = {\r\n    messages:[]\r\n};\r\n\r\nconst message = (state:any = initialState,action:any)=>{\r\n    switch (action.type){\r\n        case actionTypes.ADD_MESS:\r\n            return updateObject(state,{\r\n                messages:[...state.messages,action.mess]\r\n            })\r\n        case actionTypes.ADD_INIT_MESS:\r\n            return updateObject(state,{\r\n                messages:action.mess\r\n            })\r\n        case actionTypes.REMOVE_MESS:\r\n            return updateObject(state,{\r\n                messages:[]\r\n            })\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default message","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState:any = {\r\n    room:''\r\n};\r\n\r\nconst room = (state:any = initialState,action:any)=>{\r\n    switch (action.type){\r\n        case actionTypes.ADD_ROOM:\r\n            return updateObject(state,{\r\n                room:action.room\r\n            })\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default room","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport user from \"./store/reducers/user\"\r\nimport users from \"./store/reducers/users\"\r\nimport messages from \"./store/reducers/messages\"\r\nimport room from \"./store/reducers/room\"\r\n\r\nconst rootReducer = combineReducers({\r\n  user:user,\r\n  users:users,\r\n  messages:messages,\r\n  room:room\r\n});\r\n\r\nconst logger = (store:any) => {\r\n  return (next:any) => {\r\n      return (action:any) => {\r\n          console.log('[Middleware] Dispatching', action);\r\n          const result = next(action);\r\n          console.log('[Middleware] next state', store.getState());\r\n          return result;\r\n      }\r\n  }\r\n};\r\n\r\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}